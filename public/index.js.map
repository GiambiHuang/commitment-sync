{"version":3,"file":"index.js","sources":["../node_modules/findora-wallet-wasm/web-lightweight/wasm.js","../src/triple-masking.ts","../src/config.ts","../src/db.ts","../src/account.ts","../src/apis.ts","../src/abarMemo.ts","../src/commitment.ts","../src/index.ts"],"sourcesContent":["\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n/**\n* Returns the git commit hash and commit date of the commit this library was built against.\n* @returns {string}\n*/\nexport function build_id() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.build_id(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Generates random Base64 encoded asset type as a Base64 string. Used in asset definitions.\n* @see {@link\n* module:Findora-Wasm~TransactionBuilder#add_operation_create_asset|add_operation_create_asset}\n* for instructions on how to define an asset with a new\n* asset type\n* @returns {string}\n*/\nexport function random_asset_type() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.random_asset_type(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Creates a new asset code with prefixing-hashing the original code to query the ledger.\n* @param {string} asset_code_string\n* @returns {string}\n*/\nexport function hash_asset_code(asset_code_string) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(asset_code_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.hash_asset_code(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* Generates asset type as a Base64 string from a JSON-serialized JavaScript value.\n* @param {any} val\n* @returns {string}\n*/\nexport function asset_type_from_jsvalue(val) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.asset_type_from_jsvalue(retptr, addBorrowedObject(val));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Given a serialized state commitment and transaction, returns true if the transaction correctly\n* hashes up to the state commitment and false otherwise.\n* @param {string} state_commitment - String representing the state commitment.\n* @param {string} authenticated_txn - String representing the transaction.\n* @see {@link module:Network~Network#getTxn|Network.getTxn} for instructions on fetching a transaction from the ledger.\n* @see {@link module:Network~Network#getStateCommitment|Network.getStateCommitment}\n* for instructions on fetching a ledger state commitment.\n* @throws Will throw an error if the state commitment or the transaction fails to deserialize.\n* @param {string} state_commitment\n* @param {string} authenticated_txn\n* @returns {boolean}\n*/\nexport function verify_authenticated_txn(state_commitment, authenticated_txn) {\n    var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(authenticated_txn, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_authenticated_txn(ptr0, len0, ptr1, len1);\n    return ret !== 0;\n}\n\n/**\n* ...\n* @returns {XfrPublicKey}\n*/\nexport function get_null_pk() {\n    var ret = wasm.get_null_pk();\n    return XfrPublicKey.__wrap(ret);\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n/**\n* Build transfer from account balance to utxo tx.\n* @param {XfrPublicKey} recipient - UTXO Asset receiver.\n* @param {u64} amount - Transfer amount.\n* @param {string} sk - Ethereum wallet private key.\n* @param {u64} nonce - Transaction nonce for sender.\n* @param {XfrPublicKey} recipient\n* @param {BigInt} amount\n* @param {string} sk\n* @param {BigInt} nonce\n* @returns {string}\n*/\nexport function transfer_to_utxo_from_account(recipient, amount, sk, nonce) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(recipient, XfrPublicKey);\n        var ptr0 = recipient.ptr;\n        recipient.ptr = 0;\n        uint64CvtShim[0] = amount;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = passStringToWasm0(sk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = nonce;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        wasm.transfer_to_utxo_from_account(retptr, ptr0, low1, high1, ptr2, len2, low3, high3);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Recover ecdsa private key from mnemonic.\n* @param {string} phrase\n* @param {string} password\n* @returns {string}\n*/\nexport function recover_sk_from_mnemonic(phrase, password) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.recover_sk_from_mnemonic(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Recover ethereum address from ecdsa private key, eg. 0x73c71...\n* @param {string} sk\n* @returns {string}\n*/\nexport function recover_address_from_sk(sk) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(sk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.recover_address_from_sk(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Serialize ethereum address used to abci query nonce.\n* @param {string} address\n* @returns {string}\n*/\nexport function get_serialized_address(address) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.get_serialized_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Generate new anonymous keys\n* @returns {AnonKeys}\n*/\nexport function gen_anon_keys() {\n    var ret = wasm.gen_anon_keys();\n    return AnonKeys.__wrap(ret);\n}\n\n/**\n* Get balance for an Anonymous Blind Asset Record\n* @param {AnonAssetRecord} abar - ABAR for which balance needs to be queried\n* @param {AxfrOwnerMemo} memo - memo corresponding to the abar\n* @param keypair {AXfrKeyPair} - AXfrKeyPair of the ABAR owner\n* @param MTLeafInfo {mt_leaf_info} - the Merkle proof of the ABAR from commitment tree\n* @throws Will throw an error if abar fails to open\n* @param {AnonAssetRecord} abar\n* @param {AxfrOwnerMemo} memo\n* @param {AXfrKeyPair} keypair\n* @param {MTLeafInfo} mt_leaf_info\n* @returns {BigInt}\n*/\nexport function get_anon_balance(abar, memo, keypair, mt_leaf_info) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(abar, AnonAssetRecord);\n        var ptr0 = abar.ptr;\n        abar.ptr = 0;\n        _assertClass(memo, AxfrOwnerMemo);\n        var ptr1 = memo.ptr;\n        memo.ptr = 0;\n        _assertClass(keypair, AXfrKeyPair);\n        var ptr2 = keypair.ptr;\n        keypair.ptr = 0;\n        _assertClass(mt_leaf_info, MTLeafInfo);\n        var ptr3 = mt_leaf_info.ptr;\n        mt_leaf_info.ptr = 0;\n        wasm.get_anon_balance(retptr, ptr0, ptr1, ptr2, ptr3);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        u32CvtShim[0] = r0;\n        u32CvtShim[1] = r1;\n        const n4 = uint64CvtShim[0];\n        return n4;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* Get OABAR (Open ABAR) using the ABAR, OwnerMemo and MTLeafInfo\n* @param {AnonAssetRecord} abar - ABAR which needs to be opened\n* @param {AxfrOwnerMemo} memo - memo corresponding to the abar\n* @param keypair {AXfrKeyPair} - AXfrKeyPair of the ABAR owner\n* @param MTLeafInfo {mt_leaf_info} - the Merkle proof of the ABAR from commitment tree\n* @throws Will throw an error if abar fails to open\n* @param {AnonAssetRecord} abar\n* @param {AxfrOwnerMemo} memo\n* @param {AXfrKeyPair} keypair\n* @param {MTLeafInfo} mt_leaf_info\n* @returns {any}\n*/\nexport function get_open_abar(abar, memo, keypair, mt_leaf_info) {\n    _assertClass(abar, AnonAssetRecord);\n    var ptr0 = abar.ptr;\n    abar.ptr = 0;\n    _assertClass(memo, AxfrOwnerMemo);\n    var ptr1 = memo.ptr;\n    memo.ptr = 0;\n    _assertClass(keypair, AXfrKeyPair);\n    var ptr2 = keypair.ptr;\n    keypair.ptr = 0;\n    _assertClass(mt_leaf_info, MTLeafInfo);\n    var ptr3 = mt_leaf_info.ptr;\n    mt_leaf_info.ptr = 0;\n    var ret = wasm.get_open_abar(ptr0, ptr1, ptr2, ptr3);\n    return takeObject(ret);\n}\n\n/**\n* Generate nullifier hash using ABAR, OwnerMemo and MTLeafInfo\n* @param {AnonAssetRecord} abar - ABAR for which balance needs to be queried\n* @param {AxfrOwnerMemo} memo - memo corresponding to the abar\n* @param keypair {AXfrKeyPair} - AXfrKeyPair of the ABAR owner\n* @param MTLeafInfo {mt_leaf_info} - the Merkle proof of the ABAR from commitment tree\n* @throws Will throw an error if abar fails to open\n* @param {AnonAssetRecord} abar\n* @param {AxfrOwnerMemo} memo\n* @param {AXfrKeyPair} keypair\n* @param {MTLeafInfo} mt_leaf_info\n* @returns {string}\n*/\nexport function gen_nullifier_hash(abar, memo, keypair, mt_leaf_info) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(abar, AnonAssetRecord);\n        var ptr0 = abar.ptr;\n        abar.ptr = 0;\n        _assertClass(memo, AxfrOwnerMemo);\n        var ptr1 = memo.ptr;\n        memo.ptr = 0;\n        _assertClass(keypair, AXfrKeyPair);\n        var ptr2 = keypair.ptr;\n        keypair.ptr = 0;\n        _assertClass(mt_leaf_info, MTLeafInfo);\n        var ptr3 = mt_leaf_info.ptr;\n        mt_leaf_info.ptr = 0;\n        wasm.gen_nullifier_hash(retptr, ptr0, ptr1, ptr2, ptr3);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Returns a JavaScript object containing decrypted owner record information,\n* where `amount` is the decrypted asset amount, and `asset_type` is the decrypted asset type code.\n*\n* @param {ClientAssetRecord} record - Owner record.\n* @param {OwnerMemo} owner_memo - Owner memo of the associated record.\n* @param {XfrKeyPair} keypair - Keypair of asset owner.\n* @see {@link module:Findora-Wasm~ClientAssetRecord#from_json_record|ClientAssetRecord.from_json_record} for information about how to construct an asset record object\n* from a JSON result returned from the ledger server.\n* @param {ClientAssetRecord} record\n* @param {OwnerMemo | undefined} owner_memo\n* @param {XfrKeyPair} keypair\n* @returns {any}\n*/\nexport function open_client_asset_record(record, owner_memo, keypair) {\n    _assertClass(record, ClientAssetRecord);\n    let ptr0 = 0;\n    if (!isLikeNone(owner_memo)) {\n        _assertClass(owner_memo, OwnerMemo);\n        ptr0 = owner_memo.ptr;\n        owner_memo.ptr = 0;\n    }\n    _assertClass(keypair, XfrKeyPair);\n    var ret = wasm.open_client_asset_record(record.ptr, ptr0, keypair.ptr);\n    return takeObject(ret);\n}\n\n/**\n* Extracts the public key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function get_pub_key_str(key_pair) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_pub_key_str(retptr, key_pair.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Extracts the private key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function get_priv_key_str(key_pair) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_priv_key_str(retptr, key_pair.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} phrase\n* @param {number} num\n* @returns {string}\n*/\nexport function get_priv_key_hex_str_by_mnemonic(phrase, num) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.get_priv_key_hex_str_by_mnemonic(retptr, ptr0, len0, num);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} hex_priv_key\n* @returns {XfrKeyPair}\n*/\nexport function get_keypair_by_pri_key(hex_priv_key) {\n    var ptr0 = passStringToWasm0(hex_priv_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.get_keypair_by_pri_key(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* @param {string} hex_priv_key\n* @returns {string}\n*/\nexport function get_pub_key_hex_str_by_priv_key(hex_priv_key) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(hex_priv_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.get_pub_key_hex_str_by_priv_key(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} hex_pub_key\n* @returns {string}\n*/\nexport function get_address_by_public_key(hex_pub_key) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(hex_pub_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.get_address_by_public_key(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Extracts the public key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function get_pub_key_str_old(key_pair) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_pub_key_str_old(retptr, key_pair.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Extracts the private key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function get_priv_key_str_old(key_pair) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_priv_key_str_old(retptr, key_pair.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Creates a new transfer key pair.\n* @returns {XfrKeyPair}\n*/\nexport function new_keypair() {\n    var ret = wasm.new_keypair();\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Creates a new transfer key pair.\n* @returns {XfrKeyPair}\n*/\nexport function new_keypair_old() {\n    var ret = wasm.new_keypair_old();\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Generates a new keypair deterministically from a seed string and an optional name.\n* @param {string} seed_str\n* @param {string | undefined} name\n* @returns {XfrKeyPair}\n*/\nexport function new_keypair_from_seed(seed_str, name) {\n    var ptr0 = passStringToWasm0(seed_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(name) ? 0 : passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.new_keypair_from_seed(ptr0, len0, ptr1, len1);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Returns base64 encoded representation of an XfrPublicKey.\n* @param {XfrPublicKey} key\n* @returns {string}\n*/\nexport function public_key_to_base64(key) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key, XfrPublicKey);\n        wasm.public_key_to_base64(retptr, key.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Converts a base64 encoded public key string to a public key.\n* @param {string} pk\n* @returns {XfrPublicKey}\n*/\nexport function public_key_from_base64(pk) {\n    var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.public_key_from_base64(ptr0, len0);\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* Expresses a transfer key pair as a hex-encoded string.\n* To decode the string, use `keypair_from_str` function.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function keypair_to_str(key_pair) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.keypair_to_str(retptr, key_pair.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Constructs a transfer key pair from a hex-encoded string.\n* The encode a key pair, use `keypair_to_str` function.\n* @param {string} str\n* @returns {XfrKeyPair}\n*/\nexport function keypair_from_str(str) {\n    var ptr0 = passStringToWasm0(str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.keypair_from_str(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Generates a new credential issuer key.\n* @param {JsValue} attributes - Array of attribute types of the form `[{name: \"credit_score\",\n* size: 3}]`. The size refers to byte-size of the credential. In this case, the \"credit_score\"\n* attribute is represented as a 3 byte string \"760\". `attributes` is the list of attribute types\n* that the issuer can sign off on.\n* @param {any} attributes\n* @returns {CredentialIssuerKeyPair}\n*/\nexport function wasm_credential_issuer_key_gen(attributes) {\n    var ret = wasm.wasm_credential_issuer_key_gen(addHeapObject(attributes));\n    return CredentialIssuerKeyPair.__wrap(ret);\n}\n\n/**\n* Verifies a credential commitment. Used to confirm that a credential is tied to a ledger\n* address.\n* @param {CredIssuerPublicKey} issuer_pub_key - The credential issuer that has attested to the\n* credentials that have been committed to.\n* @param {CredentialCommitment} Credential commitment\n* @param {CredPoK} Proof of knowledge of the underlying commitment\n* @param {XfrPublicKey} Ledger address linked to this credential commitment.\n* @throws Will throw an error during verification failure (i.e. the supplied ledger address is\n* incorrect, the commitment is tied to a different credential issuer, or the proof of knowledge is\n* invalid, etc.)\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @param {CredentialCommitment} commitment\n* @param {CredentialPoK} pok\n* @param {XfrPublicKey} xfr_pk\n*/\nexport function wasm_credential_verify_commitment(issuer_pub_key, commitment, pok, xfr_pk) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    _assertClass(commitment, CredentialCommitment);\n    _assertClass(pok, CredentialPoK);\n    _assertClass(xfr_pk, XfrPublicKey);\n    wasm.wasm_credential_verify_commitment(issuer_pub_key.ptr, commitment.ptr, pok.ptr, xfr_pk.ptr);\n}\n\n/**\n* Generates a new reveal proof from a credential commitment key.\n* @param {CredUserSecretKey} user_secret_key - Secret key of the credential user who owns\n* the credentials.\n* @param {Credential} credential - Credential whose attributes will be revealed.\n* @param {JsValue} reveal_fields - Array of strings representing attribute fields to reveal.\n* @throws Will throw an error if a reveal proof cannot be generated from the credential\n* or ```reveal_fields``` fails to deserialize.\n* @param {CredUserSecretKey} user_secret_key\n* @param {Credential} credential\n* @param {CredentialCommitmentKey} key\n* @param {any} reveal_fields\n* @returns {CredentialPoK}\n*/\nexport function wasm_credential_open_commitment(user_secret_key, credential, key, reveal_fields) {\n    _assertClass(user_secret_key, CredUserSecretKey);\n    _assertClass(credential, Credential);\n    _assertClass(key, CredentialCommitmentKey);\n    var ret = wasm.wasm_credential_open_commitment(user_secret_key.ptr, credential.ptr, key.ptr, addHeapObject(reveal_fields));\n    return CredentialPoK.__wrap(ret);\n}\n\n/**\n* Generates a new credential user key.\n* @param {CredIssuerPublicKey} issuer_pub_key - The credential issuer that can sign off on this\n* user's attributes.\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @returns {CredentialUserKeyPair}\n*/\nexport function wasm_credential_user_key_gen(issuer_pub_key) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    var ret = wasm.wasm_credential_user_key_gen(issuer_pub_key.ptr);\n    return CredentialUserKeyPair.__wrap(ret);\n}\n\n/**\n* Generates a signature on user attributes that can be used to create a credential.\n* @param {CredIssuerSecretKey} issuer_secret_key - Secret key of credential issuer.\n* @param {CredUserPublicKey} user_public_key - Public key of credential user.\n* @param {JsValue} attributes - Array of attribute assignments of the form `[{name: \"credit_score\",\n* val: \"760\"}]`.\n* @throws Will throw an error if the signature cannot be generated.\n* @param {CredIssuerSecretKey} issuer_secret_key\n* @param {CredUserPublicKey} user_public_key\n* @param {any} attributes\n* @returns {CredentialSignature}\n*/\nexport function wasm_credential_sign(issuer_secret_key, user_public_key, attributes) {\n    _assertClass(issuer_secret_key, CredIssuerSecretKey);\n    _assertClass(user_public_key, CredUserPublicKey);\n    var ret = wasm.wasm_credential_sign(issuer_secret_key.ptr, user_public_key.ptr, addHeapObject(attributes));\n    return CredentialSignature.__wrap(ret);\n}\n\n/**\n* Generates a signature on user attributes that can be used to create a credential.\n* @param {CredIssuerPublicKey} issuer_public_key - Public key of credential issuer.\n* @param {CredentialSignature} signature - Credential issuer signature on attributes.\n* @param {JsValue} attributes - Array of attribute assignments of the form `[{name: \"credit_score\",\n* val: \"760\"}]'.\n* @param {CredIssuerPublicKey} issuer_public_key\n* @param {CredentialSignature} signature\n* @param {any} attributes\n* @returns {Credential}\n*/\nexport function create_credential(issuer_public_key, signature, attributes) {\n    try {\n        _assertClass(issuer_public_key, CredIssuerPublicKey);\n        _assertClass(signature, CredentialSignature);\n        var ret = wasm.create_credential(issuer_public_key.ptr, signature.ptr, addBorrowedObject(attributes));\n        return Credential.__wrap(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Generates a credential commitment. A credential commitment can be used to selectively reveal\n* attribute assignments.\n* @param {CredUserSecretKey} user_secret_key - Secret key of credential user.\n* @param {XfrPublicKey} user_public_key - Ledger signing key to link this credential to.\n* @param {Credential} credential - Credential object.\n* @param {CredUserSecretKey} user_secret_key\n* @param {XfrPublicKey} user_public_key\n* @param {Credential} credential\n* @returns {CredentialCommitmentData}\n*/\nexport function wasm_credential_commit(user_secret_key, user_public_key, credential) {\n    _assertClass(user_secret_key, CredUserSecretKey);\n    _assertClass(user_public_key, XfrPublicKey);\n    _assertClass(credential, Credential);\n    var ret = wasm.wasm_credential_commit(user_secret_key.ptr, user_public_key.ptr, credential.ptr);\n    return CredentialCommitmentData.__wrap(ret);\n}\n\n/**\n* Selectively reveals attributes committed to in a credential commitment\n* @param {CredUserSecretKey} user_sk - Secret key of credential user.\n* @param {Credential} credential - Credential object.\n* @param {JsValue} reveal_fields - Array of string names representing credentials to reveal (i.e.\n* `[\"credit_score\"]`).\n* @param {CredUserSecretKey} user_sk\n* @param {Credential} credential\n* @param {any} reveal_fields\n* @returns {CredentialRevealSig}\n*/\nexport function wasm_credential_reveal(user_sk, credential, reveal_fields) {\n    _assertClass(user_sk, CredUserSecretKey);\n    _assertClass(credential, Credential);\n    var ret = wasm.wasm_credential_reveal(user_sk.ptr, credential.ptr, addHeapObject(reveal_fields));\n    return CredentialRevealSig.__wrap(ret);\n}\n\n/**\n* Verifies revealed attributes from a commitment.\n* @param {CredIssuerPublicKey} issuer_pub_key - Public key of credential issuer.\n* @param {JsValue} attributes - Array of attribute assignments to check of the form `[{name: \"credit_score\",\n* val: \"760\"}]`.\n* @param {CredentialCommitment} commitment - Commitment to the credential.\n* @param {CredentialPoK} pok - Proof that the credential commitment is valid and commits\n* to the attribute values being revealed.\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @param {any} attributes\n* @param {CredentialCommitment} commitment\n* @param {CredentialPoK} pok\n*/\nexport function wasm_credential_verify(issuer_pub_key, attributes, commitment, pok) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    _assertClass(commitment, CredentialCommitment);\n    _assertClass(pok, CredentialPoK);\n    wasm.wasm_credential_verify(issuer_pub_key.ptr, addHeapObject(attributes), commitment.ptr, pok.ptr);\n}\n\n/**\n* Returns information about traceable assets for a given transfer.\n* @param {JsValue} xfr_body - JSON of a transfer note from a transfer operation.\n* @param {AssetTracerKeyPair} tracer_keypair - Asset tracer keypair.\n* @param {JsValue} candidate_assets - List of asset types traced by the tracer keypair.\n* @param {any} xfr_body\n* @param {AssetTracerKeyPair} tracer_keypair\n* @param {any} _candidate_assets\n* @returns {any}\n*/\nexport function trace_assets(xfr_body, tracer_keypair, _candidate_assets) {\n    _assertClass(tracer_keypair, AssetTracerKeyPair);\n    var ret = wasm.trace_assets(addHeapObject(xfr_body), tracer_keypair.ptr, addHeapObject(_candidate_assets));\n    return takeObject(ret);\n}\n\n/**\n* Returns bech32 encoded representation of an XfrPublicKey.\n* @param {XfrPublicKey} key\n* @returns {string}\n*/\nexport function public_key_to_bech32(key) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(key, XfrPublicKey);\n        wasm.public_key_to_bech32(retptr, key.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Converts a bech32 encoded public key string to a public key.\n* @param {string} addr\n* @returns {XfrPublicKey}\n*/\nexport function public_key_from_bech32(addr) {\n    var ptr0 = passStringToWasm0(addr, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.public_key_from_bech32(ptr0, len0);\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nexport function bech32_to_base64(pk) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.bech32_to_base64(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nexport function bech32_to_base64_old(pk) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.bech32_to_base64_old(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nexport function base64_to_bech32(pk) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.base64_to_bech32(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} data\n* @returns {string}\n*/\nexport function base64_to_base58(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.base64_to_base58(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} key_pair\n* @param {string} password\n* @returns {Uint8Array}\n*/\nexport function encryption_pbkdf2_aes256gcm(key_pair, password) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(key_pair, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.encryption_pbkdf2_aes256gcm(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} enc_key_pair\n* @param {string} password\n* @returns {string}\n*/\nexport function decryption_pbkdf2_aes256gcm(enc_key_pair, password) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(enc_key_pair, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.decryption_pbkdf2_aes256gcm(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} sk_str\n* @returns {XfrKeyPair}\n*/\nexport function create_keypair_from_secret(sk_str) {\n    var ptr0 = passStringToWasm0(sk_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.create_keypair_from_secret(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* @param {XfrKeyPair} kp\n* @returns {XfrPublicKey}\n*/\nexport function get_pk_from_keypair(kp) {\n    _assertClass(kp, XfrKeyPair);\n    var ret = wasm.get_pk_from_keypair(kp.ptr);\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* Randomly generate a 12words-length mnemonic.\n* @returns {string}\n*/\nexport function generate_mnemonic_default() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.generate_mnemonic_default(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Generate mnemonic with custom length and language.\n* - @param `wordslen`: acceptable value are one of [ 12, 15, 18, 21, 24 ]\n* - @param `lang`: acceptable value are one of [ \"en\", \"zh\", \"zh_traditional\", \"fr\", \"it\", \"ko\", \"sp\", \"jp\" ]\n* @param {number} wordslen\n* @param {string} lang\n* @returns {string}\n*/\nexport function generate_mnemonic_custom(wordslen, lang) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.generate_mnemonic_custom(retptr, wordslen, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with a default bip44-path,\n* that is \"m/44'/917'/0'/0/0\" (\"m/44'/coin'/account'/change/address\").\n* @param {string} phrase\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_default(phrase) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.restore_keypair_from_mnemonic_default(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with a default bip44-path,\n* that is \"m/44'/917'/0'/0/0\" (\"m/44'/coin'/account'/change/address\").\n* @param {string} phrase\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_ed25519(phrase) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.restore_keypair_from_mnemonic_ed25519(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with custom params,\n* in bip44 form.\n* @param {string} phrase\n* @param {string} lang\n* @param {BipPath} path\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_bip44(phrase, lang, path) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    _assertClass(path, BipPath);\n    var ret = wasm.restore_keypair_from_mnemonic_bip44(ptr0, len0, ptr1, len1, path.ptr);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with custom params,\n* in bip49 form.\n* @param {string} phrase\n* @param {string} lang\n* @param {BipPath} path\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_bip49(phrase, lang, path) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    _assertClass(path, BipPath);\n    var ret = wasm.restore_keypair_from_mnemonic_bip49(ptr0, len0, ptr1, len1, path.ptr);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* ID of FRA, in `String` format.\n* @returns {string}\n*/\nexport function fra_get_asset_code() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.fra_get_asset_code(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Fee smaller than this value will be denied.\n* @returns {BigInt}\n*/\nexport function fra_get_minimal_fee() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.fra_get_minimal_fee(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        u32CvtShim[0] = r0;\n        u32CvtShim[1] = r1;\n        const n0 = uint64CvtShim[0];\n        return n0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* Fee smaller than this value will be denied.\n* @returns {BigInt}\n*/\nexport function fra_get_minimal_fee_for_bar_to_abar() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.fra_get_minimal_fee_for_bar_to_abar(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        u32CvtShim[0] = r0;\n        u32CvtShim[1] = r1;\n        const n0 = uint64CvtShim[0];\n        return n0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* Anon fee for a given number of inputs & outputs\n* @param {number} n_inputs\n* @param {number} n_outputs\n* @returns {number}\n*/\nexport function get_anon_fee(n_inputs, n_outputs) {\n    var ret = wasm.get_anon_fee(n_inputs, n_outputs);\n    return ret >>> 0;\n}\n\n/**\n* The destination for fee to be transfered to.\n* @returns {XfrPublicKey}\n*/\nexport function fra_get_dest_pubkey() {\n    var ret = wasm.fra_get_dest_pubkey();\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* The system address used to reveive delegation principals.\n* @returns {string}\n*/\nexport function get_delegation_target_address() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_coinbase_address(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @returns {string}\n*/\nexport function get_coinbase_address() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_coinbase_address(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @returns {string}\n*/\nexport function get_coinbase_principal_address() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_coinbase_address(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @returns {BigInt}\n*/\nexport function get_delegation_min_amount() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_delegation_min_amount(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        u32CvtShim[0] = r0;\n        u32CvtShim[1] = r1;\n        const n0 = uint64CvtShim[0];\n        return n0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @returns {BigInt}\n*/\nexport function get_delegation_max_amount() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_delegation_max_amount(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        u32CvtShim[0] = r0;\n        u32CvtShim[1] = r1;\n        const n0 = uint64CvtShim[0];\n        return n0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} key_str\n* @returns {AXfrPubKey}\n*/\nexport function axfr_pubkey_from_string(key_str) {\n    var ptr0 = passStringToWasm0(key_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.axfr_pubkey_from_string(ptr0, len0);\n    return AXfrPubKey.__wrap(ret);\n}\n\n/**\n* @param {string} key_str\n* @returns {AXfrKeyPair}\n*/\nexport function axfr_keypair_from_string(key_str) {\n    var ptr0 = passStringToWasm0(key_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.axfr_keypair_from_string(ptr0, len0);\n    return AXfrKeyPair.__wrap(ret);\n}\n\n/**\n* @param {string} key_str\n* @returns {XPublicKey}\n*/\nexport function x_pubkey_from_string(key_str) {\n    var ptr0 = passStringToWasm0(key_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.x_pubkey_from_string(ptr0, len0);\n    return XPublicKey.__wrap(ret);\n}\n\n/**\n* @param {string} key_str\n* @returns {XSecretKey}\n*/\nexport function x_secretkey_from_string(key_str) {\n    var ptr0 = passStringToWasm0(key_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.x_secretkey_from_string(ptr0, len0);\n    return XSecretKey.__wrap(ret);\n}\n\n/**\n* @param {any} json\n* @returns {AnonAssetRecord}\n*/\nexport function abar_from_json(json) {\n    var ret = wasm.abar_from_json(addHeapObject(json));\n    return AnonAssetRecord.__wrap(ret);\n}\n\n/**\n* Decrypts an ABAR with owner memo and decryption key\n* @param {AnonAssetRecord} abar\n* @param {AxfrOwnerMemo} memo\n* @param {AXfrKeyPair} keypair\n* @returns {AmountAssetType}\n*/\nexport function open_abar(abar, memo, keypair) {\n    _assertClass(abar, AnonAssetRecord);\n    var ptr0 = abar.ptr;\n    abar.ptr = 0;\n    _assertClass(memo, AxfrOwnerMemo);\n    var ptr1 = memo.ptr;\n    memo.ptr = 0;\n    _assertClass(keypair, AXfrKeyPair);\n    var ret = wasm.open_abar(ptr0, ptr1, keypair.ptr);\n    return AmountAssetType.__wrap(ret);\n}\n\n/**\n* Decrypts the owner anon memo.\n* * `memo` - Owner anon memo to decrypt\n* * `key_pair` - Owner anon keypair\n* * `abar` - Associated anonymous blind asset record to check memo info against.\n* Return Error if memo info does not match the commitment or public key.\n* Return Ok(amount, asset_type, blinding) otherwise.\n* @param {AxfrOwnerMemo} memo\n* @param {AXfrKeyPair} key_pair\n* @param {AnonAssetRecord} abar\n* @returns {AxfrOwnerMemoInfo}\n*/\nexport function decrypt_axfr_memo(memo, key_pair, abar) {\n    _assertClass(memo, AxfrOwnerMemo);\n    _assertClass(key_pair, AXfrKeyPair);\n    _assertClass(abar, AnonAssetRecord);\n    var ret = wasm.decrypt_axfr_memo(memo.ptr, key_pair.ptr, abar.ptr);\n    return AxfrOwnerMemoInfo.__wrap(ret);\n}\n\n/**\n* Try to decrypt the owner memo to check if it is own.\n* * `memo` - Owner anon memo need to decrypt.\n* * `key_pair` - the memo bytes.\n* Return Ok(amount, asset_type, blinding) if memo is own.\n* @param {AxfrOwnerMemo} memo\n* @param {AXfrKeyPair} key_pair\n* @returns {Uint8Array}\n*/\nexport function try_decrypt_axfr_memo(memo, key_pair) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(memo, AxfrOwnerMemo);\n        _assertClass(key_pair, AXfrKeyPair);\n        wasm.try_decrypt_axfr_memo(retptr, memo.ptr, key_pair.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v0 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* Parse the owner memo from bytes.\n* * `bytes` - the memo plain bytes.\n* * `key_pair` - the memo bytes.\n* * `abar` - Associated anonymous blind asset record to check memo info against.\n* Return Error if memo info does not match the commitment.\n* Return Ok(amount, asset_type, blinding) otherwise.\n* @param {Uint8Array} bytes\n* @param {AXfrKeyPair} key_pair\n* @param {AnonAssetRecord} abar\n* @returns {AxfrOwnerMemoInfo}\n*/\nexport function parse_axfr_memo(bytes, key_pair, abar) {\n    var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _assertClass(key_pair, AXfrKeyPair);\n    _assertClass(abar, AnonAssetRecord);\n    var ret = wasm.parse_axfr_memo(ptr0, len0, key_pair.ptr, abar.ptr);\n    return AxfrOwnerMemoInfo.__wrap(ret);\n}\n\n/**\n* Convert Commitment to AnonAssetRecord.\n* @param {BLSScalar} commitment\n* @returns {AnonAssetRecord}\n*/\nexport function commitment_to_aar(commitment) {\n    _assertClass(commitment, BLSScalar);\n    var ptr0 = commitment.ptr;\n    commitment.ptr = 0;\n    var ret = wasm.commitment_to_aar(ptr0);\n    return AnonAssetRecord.__wrap(ret);\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n/**\n* Keypair associated with an Anonymous records. It is used to spending it.\n* The key pair for anonymous payment.\n*/\nexport class AXfrKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AXfrKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_axfrkeypair_free(ptr);\n    }\n}\n/**\n* The public key.\n*/\nexport class AXfrPubKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AXfrPubKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_axfrpubkey_free(ptr);\n    }\n}\n/**\n*/\nexport class AmountAssetType {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AmountAssetType.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_amountassettype_free(ptr);\n    }\n    /**\n    * @returns {BigInt}\n    */\n    get amount() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_amountassettype_amount(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {BigInt} arg0\n    */\n    set amount(arg0) {\n        uint64CvtShim[0] = arg0;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        wasm.__wbg_set_amountassettype_amount(this.ptr, low0, high0);\n    }\n    /**\n    * @returns {string}\n    */\n    get asset_type() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.amountassettype_asset_type(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n* Asset record to be put as leaves on the tree.\n*/\nexport class AnonAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AnonAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_anonassetrecord_free(ptr);\n    }\n    /**\n    * The commitment.\n    * @returns {BLSScalar}\n    */\n    get commitment() {\n        var ret = wasm.__wbg_get_anonassetrecord_commitment(this.ptr);\n        return BLSScalar.__wrap(ret);\n    }\n    /**\n    * The commitment.\n    * @param {BLSScalar} arg0\n    */\n    set commitment(arg0) {\n        _assertClass(arg0, BLSScalar);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_anonassetrecord_commitment(this.ptr, ptr0);\n    }\n}\n/**\n* AnonKeys is used to store keys for Anon proofs\n*/\nexport class AnonKeys {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AnonKeys.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_anonkeys_free(ptr);\n    }\n    /**\n    * @param {any} json\n    * @returns {AnonKeys}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.anonkeys_from_json(addBorrowedObject(json));\n            return AnonKeys.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.anonkeys_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    get secret_key() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.anonkeys_secret_key(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {string} secret_key\n    */\n    set secret_key(secret_key) {\n        var ptr0 = passStringToWasm0(secret_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.anonkeys_set_secret_key(this.ptr, ptr0, len0);\n    }\n    /**\n    * @returns {string}\n    */\n    get pub_key() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.anonkeys_pub_key(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {string} pub_key\n    */\n    set pub_key(pub_key) {\n        var ptr0 = passStringToWasm0(pub_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.anonkeys_set_pub_key(this.ptr, ptr0, len0);\n    }\n}\n/**\n* Structure that enables clients to construct complex transfers.\n*/\nexport class AnonTransferOperationBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AnonTransferOperationBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_anontransferoperationbuilder_free(ptr);\n    }\n    /**\n    * new is a constructor for AnonTransferOperationBuilder\n    * @param {BigInt} seq_id\n    * @returns {AnonTransferOperationBuilder}\n    */\n    static new(seq_id) {\n        uint64CvtShim[0] = seq_id;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.anontransferoperationbuilder_new(low0, high0);\n        return AnonTransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * add_input is used to add a new input source for Anon Transfer\n    * @param {AnonAssetRecord} abar - input ABAR to transfer\n    * @param {AxfrOwnerMemo} memo - memo corresponding to the input abar\n    * @param keypair {AXfrKeyPair} - AXfrKeyPair of the ABAR owner\n    * @param MTLeafInfo {mt_leaf_info} - the Merkle proof of the ABAR from commitment tree\n    * @throws Will throw an error if abar fails to open, input fails to get added to Operation\n    * @param {AnonAssetRecord} abar\n    * @param {AxfrOwnerMemo} memo\n    * @param {AXfrKeyPair} keypair\n    * @param {MTLeafInfo} mt_leaf_info\n    * @returns {AnonTransferOperationBuilder}\n    */\n    add_input(abar, memo, keypair, mt_leaf_info) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(abar, AnonAssetRecord);\n        _assertClass(memo, AxfrOwnerMemo);\n        _assertClass(keypair, AXfrKeyPair);\n        _assertClass(mt_leaf_info, MTLeafInfo);\n        var ptr0 = mt_leaf_info.ptr;\n        mt_leaf_info.ptr = 0;\n        var ret = wasm.anontransferoperationbuilder_add_input(ptr, abar.ptr, memo.ptr, keypair.ptr, ptr0);\n        return AnonTransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * add_output is used to add a output to the Anon Transfer\n    * @param amount {u64} - amount to be sent to the receiver\n    * @param to {AXfrPubKey} - original pub key of receiver\n    * @throws error if ABAR fails to be built\n    * @param {BigInt} amount\n    * @param {string} asset_type\n    * @param {AXfrPubKey} to\n    * @returns {AnonTransferOperationBuilder}\n    */\n    add_output(amount, asset_type, to) {\n        const ptr = this.__destroy_into_raw();\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ptr1 = passStringToWasm0(asset_type, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        _assertClass(to, AXfrPubKey);\n        var ptr2 = to.ptr;\n        to.ptr = 0;\n        var ret = wasm.anontransferoperationbuilder_add_output(ptr, low0, high0, ptr1, len1, ptr2);\n        return AnonTransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * add_keypair is used to add the sender's keypair for the nullifier generation\n    * @param to {AXfrKeyPair} - original keypair of sender\n    * @throws error if ABAR fails to be built\n    * @param {AXfrKeyPair} keypair\n    * @returns {AnonTransferOperationBuilder}\n    */\n    add_keypair(keypair) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, AXfrKeyPair);\n        var ret = wasm.anontransferoperationbuilder_add_keypair(ptr, keypair.ptr);\n        return AnonTransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * get_expected_fee is used to gather extra FRA that needs to be spent to make the transaction\n    * have enough fees.\n    * @returns {BigInt}\n    */\n    get_expected_fee() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.anontransferoperationbuilder_get_expected_fee(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * get_total_fee_estimate\n    * @returns {BigInt}\n    */\n    get_total_fee_estimate() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.anontransferoperationbuilder_get_total_fee_estimate(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * get_commitments returns a list of all the commitments for receiver public keys\n    * @returns {any}\n    */\n    get_commitments() {\n        var ret = wasm.anontransferoperationbuilder_get_commitments(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * get_commitment_map returns a hashmap of all the commitments mapped to public key, asset, amount\n    * @returns {any}\n    */\n    get_commitment_map() {\n        var ret = wasm.anontransferoperationbuilder_get_commitment_map(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * build is used to build proof the Transfer Operation\n    * @returns {AnonTransferOperationBuilder}\n    */\n    build() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.anontransferoperationbuilder_build(ptr);\n        return AnonTransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * transaction returns the prepared Anon Transfer Operation\n    * @param nonce {NoReplayToken} - nonce of the txn to be added to the operation\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            const ptr = this.__destroy_into_raw();\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.anontransferoperationbuilder_transaction(retptr, ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n* When an asset is defined, several options governing the assets must be\n* specified:\n* 1. **Traceable**: Records and identities of traceable assets can be decrypted by a provided tracing key. By defaults, assets do not have\n* any tracing policies.\n* 2. **Transferable**: Non-transferable assets can only be transferred once from the issuer to another user. By default, assets are transferable.\n* 3. **Updatable**: Whether the asset memo can be updated. By default, assets are not updatable.\n* 4. **Transfer signature rules**: Signature weights and threshold for a valid transfer. By\n*    default, there are no special signature requirements.\n* 5. **Max units**: Optional limit on the total number of units of this asset that can be issued.\n*    By default, assets do not have issuance caps.\n* @see {@link module:Findora-Wasm~TracingPolicies|TracingPolicies} for more information about tracing policies.\n* @see {@link module:Findora-Wasm~TransactionBuilder#add_operation_update_memo|add_operation_update_memo} for more information about how to add\n* a memo update operation to a transaction.\n* @see {@link module:Findora-Wasm~SignatureRules|SignatureRules} for more information about co-signatures.\n* @see {@link\n* module:Findora-Wasm~TransactionBuilder#add_operation_create_asset|add_operation_create_asset}\n* for information about how to add asset rules to an asset definition.\n*/\nexport class AssetRules {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetRules.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_assetrules_free(ptr);\n    }\n    /**\n    * Create a default set of asset rules. See class description for defaults.\n    * @returns {AssetRules}\n    */\n    static new() {\n        var ret = wasm.assetrules_new();\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Adds an asset tracing policy.\n    * @param {TracingPolicy} policy - Tracing policy for the new asset.\n    * @param {TracingPolicy} policy\n    * @returns {AssetRules}\n    */\n    add_tracing_policy(policy) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(policy, TracingPolicy);\n        var ret = wasm.assetrules_add_tracing_policy(ptr, policy.ptr);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Set a cap on the number of units of this asset that can be issued.\n    * @param {BigInt} max_units - Maximum number of units that can be issued.\n    * @param {BigInt} max_units\n    * @returns {AssetRules}\n    */\n    set_max_units(max_units) {\n        const ptr = this.__destroy_into_raw();\n        uint64CvtShim[0] = max_units;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.assetrules_set_max_units(ptr, low0, high0);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Transferability toggle. Assets that are not transferable can only be transferred by the asset\n    * issuer.\n    * @param {boolean} transferable - Boolean indicating whether asset can be transferred.\n    * @param {boolean} transferable\n    * @returns {AssetRules}\n    */\n    set_transferable(transferable) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.assetrules_set_transferable(ptr, transferable);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * The updatable flag determines whether the asset memo can be updated after issuance.\n    * @param {boolean} updatable - Boolean indicating whether asset memo can be updated.\n    * @see {@link module:Findora-Wasm~TransactionBuilder#add_operation_update_memo|add_operation_update_memo} for more information about how to add\n    * a memo update operation to a transaction.\n    * @param {boolean} updatable\n    * @returns {AssetRules}\n    */\n    set_updatable(updatable) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.assetrules_set_updatable(ptr, updatable);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Co-signature rules. Assets with co-signatue rules require additional weighted signatures to\n    * be transferred.\n    * @param {SignatureRules} multisig_rules - Co-signature restrictions.\n    * @param {SignatureRules} multisig_rules\n    * @returns {AssetRules}\n    */\n    set_transfer_multisig_rules(multisig_rules) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(multisig_rules, SignatureRules);\n        var ptr0 = multisig_rules.ptr;\n        multisig_rules.ptr = 0;\n        var ret = wasm.assetrules_set_transfer_multisig_rules(ptr, ptr0);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Set the decimal number of asset. Return error string if failed, otherwise return changed asset.\n    * #param {Number} decimals - The number of decimals used to set its user representation.\n    * Decimals should be 0 ~ 255.\n    * @param {number} decimals\n    * @returns {AssetRules}\n    */\n    set_decimals(decimals) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.assetrules_set_decimals(ptr, decimals);\n        return AssetRules.__wrap(ret);\n    }\n}\n/**\n* Key pair used by asset tracers to decrypt asset amounts, types, and identity\n* commitments associated with traceable asset transfers.\n* @see {@link module:Findora-Wasm.TracingPolicy|TracingPolicy} for information about tracing policies.\n* @see {@link module:Findora-Wasm~AssetRules#add_tracing_policy|add_tracing_policy} for information about how to add a tracing policy to\n* an asset definition.\n*/\nexport class AssetTracerKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetTracerKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_assettracerkeypair_free(ptr);\n    }\n    /**\n    * Creates a new tracer key pair.\n    * @returns {AssetTracerKeyPair}\n    */\n    static new() {\n        var ret = wasm.assettracerkeypair_new();\n        return AssetTracerKeyPair.__wrap(ret);\n    }\n}\n/**\n* Object representing an asset definition. Used to fetch tracing policies and any other\n* information that may be required to construct a valid transfer or issuance.\n*/\nexport class AssetType {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetType.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_assettype_free(ptr);\n    }\n    /**\n    * Builds an asset type from a JSON-encoded JavaScript value.\n    * @param {JsValue} val - JSON-encoded asset type fetched from ledger server with the `asset_token/{code}` route.\n    * Note: The first field of an asset type is `properties`. See the example below.\n    *\n    * @example\n    * \"properties\":{\n    *   \"code\":{\n    *     \"val\":[151,8,106,38,126,101,250,236,134,77,83,180,43,152,47,57,83,30,60,8,132,218,48,52,167,167,190,244,34,45,78,80]\n    *   },\n    *   \"issuer\":{\"key\":“iFW4jY_DQVSGED05kTseBBn0BllPB9Q9escOJUpf4DY=”},\n    *   \"memo\":“test memo”,\n    *   \"asset_rules\":{\n    *     \"transferable\":true,\n    *     \"updatable\":false,\n    *     \"transfer_multisig_rules\":null,\n    *     \"max_units\":5000\n    *   }\n    * }\n    *\n    * @see {@link module:Findora-Network~Network#getAssetProperties|Network.getAsset} for information about how to\n    * fetch an asset type from the ledger server.\n    * @param {any} json\n    * @returns {AssetType}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.assettype_from_json(addBorrowedObject(json));\n            return AssetType.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Fetch the tracing policies associated with this asset type.\n    * @returns {TracingPolicies}\n    */\n    get_tracing_policies() {\n        var ret = wasm.assettype_get_tracing_policies(this.ptr);\n        return TracingPolicies.__wrap(ret);\n    }\n}\n/**\n* Object representing an authenticable asset record. Clients can validate authentication proofs\n* against a ledger state commitment.\n*/\nexport class AuthenticatedAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AuthenticatedAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_authenticatedassetrecord_free(ptr);\n    }\n    /**\n    * Given a serialized state commitment, returns true if the\n    * authenticated UTXO proofs validate correctly and false otherwise. If the proofs validate, the\n    * asset record contained in this structure exists on the ledger and is unspent.\n    * @param {string} state_commitment - String representing the state commitment.\n    * @see {@link module:Findora-Network~Network#getStateCommitment|getStateCommitment} for instructions on fetching a ledger state commitment.\n    * @throws Will throw an error if the state commitment fails to deserialize.\n    * @param {string} state_commitment\n    * @returns {boolean}\n    */\n    is_valid(state_commitment) {\n        var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.authenticatedassetrecord_is_valid(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * Builds an AuthenticatedAssetRecord from a JSON-encoded asset record returned from the ledger\n    * server.\n    * @param {JsValue} val - JSON-encoded asset record fetched from ledger server.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for information about how to\n    * fetch an asset record from the ledger server.\n    * @param {any} record\n    * @returns {AuthenticatedAssetRecord}\n    */\n    static from_json_record(record) {\n        try {\n            var ret = wasm.authenticatedassetrecord_from_json_record(addBorrowedObject(record));\n            return AuthenticatedAssetRecord.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* Asset owner memo. Contains information needed to decrypt an asset record.\n* @see {@link module:Findora-Wasm.ClientAssetRecord|ClientAssetRecord} for more details about asset records.\n*/\nexport class AxfrOwnerMemo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AxfrOwnerMemo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_axfrownermemo_free(ptr);\n    }\n    /**\n    * Builds an owner memo from a JSON-serialized JavaScript value.\n    * @param {JsValue} val - JSON owner memo fetched from query server with the `get_owner_memo/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route. See the example below.\n    *\n    * @example\n    * {\n    *   \"blind_share\":[91,251,44,28,7,221,67,155,175,213,25,183,70,90,119,232,212,238,226,142,159,200,54,19,60,115,38,221,248,202,74,248],\n    *   \"lock\":{\"ciphertext\":[119,54,117,136,125,133,112,193],\"encoded_rand\":\"8KDql2JphPB5WLd7-aYE1bxTQAcweFSmrqymLvPDntM=\"}\n    * }\n    * @param {any} val\n    * @returns {AxfrOwnerMemo}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.axfrownermemo_from_json(addBorrowedObject(val));\n            return AxfrOwnerMemo.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Creates a clone of the owner memo.\n    * @returns {AxfrOwnerMemo}\n    */\n    clone() {\n        var ret = wasm.axfrownermemo_clone(this.ptr);\n        return AxfrOwnerMemo.__wrap(ret);\n    }\n}\n/**\n* Asset owner memo decrypted info. contains amount, asset_type and blind.\n*/\nexport class AxfrOwnerMemoInfo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AxfrOwnerMemoInfo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_axfrownermemoinfo_free(ptr);\n    }\n    /**\n    * @returns {BigInt}\n    */\n    get amount() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_amountassettype_amount(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get asset_type() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.axfrownermemoinfo_asset_type(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {BLSScalar}\n    */\n    get blind() {\n        var ret = wasm.axfrownermemoinfo_blind(this.ptr);\n        return BLSScalar.__wrap(ret);\n    }\n}\n/**\n* The wrapped struct for [`ark_bls12_381::G1Projective`](https://docs.rs/ark-bls12-381/0.3.0/ark_bls12_381/g1/type.G1Projective.html)\n*/\nexport class BLSG1 {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_blsg1_free(ptr);\n    }\n}\n/**\n* The wrapped struct for [`ark_bls12_381::G2Projective`](https://docs.rs/ark-bls12-381/0.3.0/ark_bls12_381/g2/type.G2Projective.html)\n*/\nexport class BLSG2 {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_blsg2_free(ptr);\n    }\n}\n/**\n* The wrapped struct for [`Fp12<ark_bls12_381::Fq12Parameters>`](https://docs.rs/ark-bls12-381/0.3.0/ark_bls12_381/fq12/struct.Fq12Parameters.html),\n* which is the pairing result\n*/\nexport class BLSGt {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_blsgt_free(ptr);\n    }\n}\n/**\n* The wrapped struct for [`ark_bls12_381::Fr`](https://docs.rs/ark-bls12-381/0.3.0/ark_bls12_381/fr/struct.FrParameters.html)\n*/\nexport class BLSScalar {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BLSScalar.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_blsscalar_free(ptr);\n    }\n}\n/**\n* Use this struct to express a Bip44/Bip49 path.\n*/\nexport class BipPath {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BipPath.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_bippath_free(ptr);\n    }\n    /**\n    * @param {number} coin\n    * @param {number} account\n    * @param {number} change\n    * @param {number} address\n    * @returns {BipPath}\n    */\n    static new(coin, account, change, address) {\n        var ret = wasm.bippath_new(coin, account, change, address);\n        return BipPath.__wrap(ret);\n    }\n}\n/**\n* This object represents an asset record owned by a ledger key pair.\n* @see {@link module:Findora-Wasm.open_client_asset_record|open_client_asset_record} for information about how to decrypt an encrypted asset\n* record.\n*/\nexport class ClientAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ClientAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_clientassetrecord_free(ptr);\n    }\n    /**\n    * Builds a client record from a JSON-encoded JavaScript value.\n    *\n    * @param {JsValue} val - JSON-encoded autehtnicated asset record fetched from ledger server with the `utxo_sid/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route.\n    * Note: The first field of an asset record is `utxo`. See the example below.\n    *\n    * @example\n    * \"utxo\":{\n    *   \"amount\":{\n    *     \"NonConfidential\":5\n    *   },\n    *  \"asset_type\":{\n    *     \"NonConfidential\":[113,168,158,149,55,64,18,189,88,156,133,204,156,46,106,46,232,62,69,233,157,112,240,132,164,120,4,110,14,247,109,127]\n    *   },\n    *   \"public_key\":\"Glf8dKF6jAPYHzR_PYYYfzaWqpYcMvnrIcazxsilmlA=\"\n    * }\n    *\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for information about how to\n    * fetch an asset record from the ledger server.\n    * @param {any} val\n    * @returns {ClientAssetRecord}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.clientassetrecord_from_json(addBorrowedObject(val));\n            return ClientAssetRecord.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * ClientAssetRecord ==> JsValue\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.clientassetrecord_to_json(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n* Public key of a credential issuer.\n*/\nexport class CredIssuerPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredIssuerPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credissuerpublickey_free(ptr);\n    }\n}\n/**\n* Secret key of a credential issuer.\n*/\nexport class CredIssuerSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredIssuerSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credissuersecretkey_free(ptr);\n    }\n}\n/**\n* Public key of a credential user.\n*/\nexport class CredUserPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredUserPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_creduserpublickey_free(ptr);\n    }\n}\n/**\n* Secret key of a credential user.\n*/\nexport class CredUserSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredUserSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credusersecretkey_free(ptr);\n    }\n}\n/**\n* A user credential that can be used to selectively reveal credential attributes.\n* @see {@link module:Findora-Wasm.wasm_credential_commit|wasm_credential_commit} for information about how to commit to a credential.\n* @see {@link module:Findora-Wasm.wasm_credential_reveal|wasm_credential_reveal} for information about how to selectively reveal credential\n* attributes.\n*/\nexport class Credential {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Credential.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credential_free(ptr);\n    }\n}\n/**\n* Commitment to a credential record.\n* @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n* credential commitment.\n*/\nexport class CredentialCommitment {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitment.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialcommitment_free(ptr);\n    }\n}\n/**\n* Commitment to a credential record, proof that the commitment is valid, and credential key that can be used\n* to open a commitment.\n*/\nexport class CredentialCommitmentData {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitmentData.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialcommitmentdata_free(ptr);\n    }\n    /**\n    * Returns the underlying credential commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialCommitment}\n    */\n    get_commitment() {\n        var ret = wasm.credentialcommitmentdata_get_commitment(this.ptr);\n        return CredentialCommitment.__wrap(ret);\n    }\n    /**\n    * Returns the underlying proof of knowledge that the credential is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialPoK}\n    */\n    get_pok() {\n        var ret = wasm.credentialcommitmentdata_get_pok(this.ptr);\n        return CredentialPoK.__wrap(ret);\n    }\n    /**\n    * Returns the key used to generate the commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_open_commitment|wasm_credential_open_commitment} for information about how to open a\n    * credential commitment.\n    * @returns {CredentialCommitmentKey}\n    */\n    get_commit_key() {\n        var ret = wasm.credentialcommitmentdata_get_commit_key(this.ptr);\n        return CredentialCommitmentKey.__wrap(ret);\n    }\n}\n/**\n* Key used to generate a credential commitment.\n* @see {@link module:Findora-Wasm.wasm_credential_open_commitment|wasm_credential_open_commitment} for information about how to\n* open a credential commitment.\n*/\nexport class CredentialCommitmentKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitmentKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialcommitmentkey_free(ptr);\n    }\n}\n/**\n* Key pair of a credential issuer.\n*/\nexport class CredentialIssuerKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialIssuerKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialissuerkeypair_free(ptr);\n    }\n    /**\n    * Returns the credential issuer's public key.\n    * @returns {CredIssuerPublicKey}\n    */\n    get_pk() {\n        var ret = wasm.credentialissuerkeypair_get_pk(this.ptr);\n        return CredIssuerPublicKey.__wrap(ret);\n    }\n    /**\n    * Returns the credential issuer's secret key.\n    * @returns {CredIssuerSecretKey}\n    */\n    get_sk() {\n        var ret = wasm.credentialissuerkeypair_get_sk(this.ptr);\n        return CredIssuerSecretKey.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a serialized value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.credentialissuerkeypair_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Generate a key pair from a JSON-serialized JavaScript value.\n    * @param {any} val\n    * @returns {CredentialIssuerKeyPair}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.credentialissuerkeypair_from_json(addBorrowedObject(val));\n            return CredentialIssuerKeyPair.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* Proof that a credential is a valid re-randomization of a credential signed by a certain asset\n* issuer.\n* @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n* credential commitment.\n*/\nexport class CredentialPoK {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialPoK.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialpok_free(ptr);\n    }\n}\n/**\n* Reveal signature of a credential record.\n*/\nexport class CredentialRevealSig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialRevealSig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialrevealsig_free(ptr);\n    }\n    /**\n    * Returns the underlying credential commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialCommitment}\n    */\n    get_commitment() {\n        var ret = wasm.credentialcommitmentdata_get_commitment(this.ptr);\n        return CredentialCommitment.__wrap(ret);\n    }\n    /**\n    * Returns the underlying proof of knowledge that the credential is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialPoK}\n    */\n    get_pok() {\n        var ret = wasm.credentialrevealsig_get_pok(this.ptr);\n        return CredentialPoK.__wrap(ret);\n    }\n}\n/**\n* Signature of a credential record.\n*/\nexport class CredentialSignature {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialSignature.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialsignature_free(ptr);\n    }\n}\n/**\n* Key pair of a credential user.\n*/\nexport class CredentialUserKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialUserKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_credentialuserkeypair_free(ptr);\n    }\n    /**\n    * Returns the credential issuer's public key.\n    * @returns {CredUserPublicKey}\n    */\n    get_pk() {\n        var ret = wasm.credentialuserkeypair_get_pk(this.ptr);\n        return CredUserPublicKey.__wrap(ret);\n    }\n    /**\n    * Returns the credential issuer's secret key.\n    * @returns {CredUserSecretKey}\n    */\n    get_sk() {\n        var ret = wasm.credentialuserkeypair_get_sk(this.ptr);\n        return CredUserSecretKey.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a serialized value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.credentialuserkeypair_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Generate a key pair from a JSON-serialized JavaScript value.\n    * @param {any} val\n    * @returns {CredentialUserKeyPair}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.credentialuserkeypair_from_json(addBorrowedObject(val));\n            return CredentialUserKeyPair.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class FeeInputs {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FeeInputs.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_feeinputs_free(ptr);\n    }\n    /**\n    * @returns {FeeInputs}\n    */\n    static new() {\n        var ret = wasm.feeinputs_new();\n        return FeeInputs.__wrap(ret);\n    }\n    /**\n    * @param {BigInt} am\n    * @param {TxoRef} tr\n    * @param {ClientAssetRecord} ar\n    * @param {OwnerMemo | undefined} om\n    * @param {XfrKeyPair} kp\n    */\n    append(am, tr, ar, om, kp) {\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(tr, TxoRef);\n        var ptr1 = tr.ptr;\n        tr.ptr = 0;\n        _assertClass(ar, ClientAssetRecord);\n        var ptr2 = ar.ptr;\n        ar.ptr = 0;\n        let ptr3 = 0;\n        if (!isLikeNone(om)) {\n            _assertClass(om, OwnerMemo);\n            ptr3 = om.ptr;\n            om.ptr = 0;\n        }\n        _assertClass(kp, XfrKeyPair);\n        var ptr4 = kp.ptr;\n        kp.ptr = 0;\n        wasm.feeinputs_append(this.ptr, low0, high0, ptr1, ptr2, ptr3, ptr4);\n    }\n    /**\n    * @param {BigInt} am\n    * @param {TxoRef} tr\n    * @param {ClientAssetRecord} ar\n    * @param {OwnerMemo | undefined} om\n    * @param {XfrKeyPair} kp\n    * @returns {FeeInputs}\n    */\n    append2(am, tr, ar, om, kp) {\n        const ptr = this.__destroy_into_raw();\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(tr, TxoRef);\n        var ptr1 = tr.ptr;\n        tr.ptr = 0;\n        _assertClass(ar, ClientAssetRecord);\n        var ptr2 = ar.ptr;\n        ar.ptr = 0;\n        let ptr3 = 0;\n        if (!isLikeNone(om)) {\n            _assertClass(om, OwnerMemo);\n            ptr3 = om.ptr;\n            om.ptr = 0;\n        }\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.feeinputs_append2(ptr, low0, high0, ptr1, ptr2, ptr3, kp.ptr);\n        return FeeInputs.__wrap(ret);\n    }\n}\n/**\n* The wrapped struct for `ark_ed_on_bls12_381::Fr`\n*/\nexport class JubjubScalar {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_jubjubscalar_free(ptr);\n    }\n}\n/**\n*/\nexport class MTLeafInfo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MTLeafInfo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mtleafinfo_free(ptr);\n    }\n    /**\n    * @param {any} json\n    * @returns {MTLeafInfo}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.mtleafinfo_from_json(addBorrowedObject(json));\n            return MTLeafInfo.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.mtleafinfo_to_json(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n* A Merkle tree node.\n*/\nexport class MTNode {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mtnode_free(ptr);\n    }\n    /**\n    * The left child of its parent in a three-ary tree.\n    * @returns {BLSScalar}\n    */\n    get left() {\n        var ret = wasm.__wbg_get_anonassetrecord_commitment(this.ptr);\n        return BLSScalar.__wrap(ret);\n    }\n    /**\n    * The left child of its parent in a three-ary tree.\n    * @param {BLSScalar} arg0\n    */\n    set left(arg0) {\n        _assertClass(arg0, BLSScalar);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_anonassetrecord_commitment(this.ptr, ptr0);\n    }\n    /**\n    * The mid child of its parent in a three-ary tree.\n    * @returns {BLSScalar}\n    */\n    get mid() {\n        var ret = wasm.__wbg_get_mtnode_mid(this.ptr);\n        return BLSScalar.__wrap(ret);\n    }\n    /**\n    * The mid child of its parent in a three-ary tree.\n    * @param {BLSScalar} arg0\n    */\n    set mid(arg0) {\n        _assertClass(arg0, BLSScalar);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_mtnode_mid(this.ptr, ptr0);\n    }\n    /**\n    * The right child of its parent in a three-ary tree.\n    * @returns {BLSScalar}\n    */\n    get right() {\n        var ret = wasm.__wbg_get_mtnode_right(this.ptr);\n        return BLSScalar.__wrap(ret);\n    }\n    /**\n    * The right child of its parent in a three-ary tree.\n    * @param {BLSScalar} arg0\n    */\n    set right(arg0) {\n        _assertClass(arg0, BLSScalar);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_mtnode_right(this.ptr, ptr0);\n    }\n    /**\n    * Whether this node is the left child of the parent.\n    * @returns {number}\n    */\n    get is_left_child() {\n        var ret = wasm.__wbg_get_mtnode_is_left_child(this.ptr);\n        return ret;\n    }\n    /**\n    * Whether this node is the left child of the parent.\n    * @param {number} arg0\n    */\n    set is_left_child(arg0) {\n        wasm.__wbg_set_mtnode_is_left_child(this.ptr, arg0);\n    }\n    /**\n    * Whether this node is the mid child of the parent.\n    * @returns {number}\n    */\n    get is_mid_child() {\n        var ret = wasm.__wbg_get_mtnode_is_mid_child(this.ptr);\n        return ret;\n    }\n    /**\n    * Whether this node is the mid child of the parent.\n    * @param {number} arg0\n    */\n    set is_mid_child(arg0) {\n        wasm.__wbg_set_mtnode_is_mid_child(this.ptr, arg0);\n    }\n    /**\n    * Whether this node is the right child of the parent.\n    * @returns {number}\n    */\n    get is_right_child() {\n        var ret = wasm.__wbg_get_mtnode_is_right_child(this.ptr);\n        return ret;\n    }\n    /**\n    * Whether this node is the right child of the parent.\n    * @param {number} arg0\n    */\n    set is_right_child(arg0) {\n        wasm.__wbg_set_mtnode_is_right_child(this.ptr, arg0);\n    }\n}\n/**\n* Asset owner memo. Contains information needed to decrypt an asset record.\n* @see {@link module:Findora-Wasm.ClientAssetRecord|ClientAssetRecord} for more details about asset records.\n*/\nexport class OwnerMemo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(OwnerMemo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_ownermemo_free(ptr);\n    }\n    /**\n    * Builds an owner memo from a JSON-serialized JavaScript value.\n    * @param {JsValue} val - JSON owner memo fetched from query server with the `get_owner_memo/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route. See the example below.\n    *\n    * @example\n    * {\n    *   \"blind_share\":[91,251,44,28,7,221,67,155,175,213,25,183,70,90,119,232,212,238,226,142,159,200,54,19,60,115,38,221,248,202,74,248],\n    *   \"lock\":{\"ciphertext\":[119,54,117,136,125,133,112,193],\"encoded_rand\":\"8KDql2JphPB5WLd7-aYE1bxTQAcweFSmrqymLvPDntM=\"}\n    * }\n    * @param {any} val\n    * @returns {OwnerMemo}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.ownermemo_from_json(addBorrowedObject(val));\n            return OwnerMemo.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Creates a clone of the owner memo.\n    * @returns {OwnerMemo}\n    */\n    clone() {\n        var ret = wasm.ownermemo_clone(this.ptr);\n        return OwnerMemo.__wrap(ret);\n    }\n}\n/**\n* The wrapped struct for [`ark_bulletproofs::curve::secp256k1::G1Projective`](https://github.com/FindoraNetwork/ark-bulletproofs/blob/main/src/curve/secp256k1/g1.rs)\n*/\nexport class SECP256K1G1 {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_secp256k1g1_free(ptr);\n    }\n}\n/**\n* The wrapped struct for [`ark_bulletproofs::curve::secp256k1::Fr`](https://github.com/FindoraNetwork/ark-bulletproofs/blob/main/src/curve/secp256k1/fr.rs)\n*/\nexport class SECP256K1Scalar {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_secp256k1scalar_free(ptr);\n    }\n}\n/**\n* The wrapped struct for [`ark_bulletproofs::curve::secq256k1::G1Projective`](https://github.com/FindoraNetwork/ark-bulletproofs/blob/main/src/curve/secq256k1/g1.rs)\n*/\nexport class SECQ256K1G1 {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_secq256k1g1_free(ptr);\n    }\n}\n/**\n* The wrapped struct for [`ark_bulletproofs::curve::secq256k1::Fr`](https://github.com/FindoraNetwork/ark-bulletproofs/blob/main/src/curve/secq256k1/fr.rs)\n*/\nexport class SECQ256K1Scalar {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_secq256k1scalar_free(ptr);\n    }\n}\n/**\n* Stores threshold and weights for a multisignature requirement.\n*/\nexport class SignatureRules {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SignatureRules.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signaturerules_free(ptr);\n    }\n    /**\n    * Creates a new set of co-signature rules.\n    *\n    * @param {BigInt} threshold - Minimum sum of signature weights that is required for an asset\n    * transfer.\n    * @param {JsValue} weights - Array of public key weights of the form `[[\"kAb...\", BigInt(5)]]', where the\n    * first element of each tuple is a base64 encoded public key and the second is the key's\n    * associated weight.\n    * @param {BigInt} threshold\n    * @param {any} weights\n    * @returns {SignatureRules}\n    */\n    static new(threshold, weights) {\n        uint64CvtShim[0] = threshold;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.signaturerules_new(low0, high0, addHeapObject(weights));\n        return SignatureRules.__wrap(ret);\n    }\n}\n/**\n* A collection of tracing policies. Use this object when constructing asset transfers to generate\n* the correct tracing proofs for traceable assets.\n*/\nexport class TracingPolicies {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TracingPolicies.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_tracingpolicies_free(ptr);\n    }\n}\n/**\n* Tracing policy for asset transfers. Can be configured to track credentials, the asset type and\n* amount, or both.\n*/\nexport class TracingPolicy {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TracingPolicy.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_tracingpolicy_free(ptr);\n    }\n    /**\n    * @param {AssetTracerKeyPair} tracing_key\n    * @returns {TracingPolicy}\n    */\n    static new_with_tracing(tracing_key) {\n        _assertClass(tracing_key, AssetTracerKeyPair);\n        var ret = wasm.tracingpolicy_new_with_tracing(tracing_key.ptr);\n        return TracingPolicy.__wrap(ret);\n    }\n    /**\n    * @param {AssetTracerKeyPair} tracing_key\n    * @param {CredIssuerPublicKey} cred_issuer_key\n    * @param {any} reveal_map\n    * @param {boolean} tracing\n    * @returns {TracingPolicy}\n    */\n    static new_with_identity_tracing(tracing_key, cred_issuer_key, reveal_map, tracing) {\n        _assertClass(tracing_key, AssetTracerKeyPair);\n        _assertClass(cred_issuer_key, CredIssuerPublicKey);\n        var ret = wasm.tracingpolicy_new_with_identity_tracing(tracing_key.ptr, cred_issuer_key.ptr, addHeapObject(reveal_map), tracing);\n        return TracingPolicy.__wrap(ret);\n    }\n}\n/**\n* Structure that allows users to construct arbitrary transactions.\n*/\nexport class TransactionBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransactionBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transactionbuilder_free(ptr);\n    }\n    /**\n    * @param am: amount to pay\n    * @param kp: owner's XfrKeyPair\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    add_fee_relative_auto(kp) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(kp, XfrKeyPair);\n        var ptr0 = kp.ptr;\n        kp.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee_relative_auto(ptr, ptr0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Use this func to get the necessary infomations for generating `Relative Inputs`\n    *\n    * - TxoRef::Relative(\"Element index of the result\")\n    * - ClientAssetRecord::from_json(\"Element of the result\")\n    * @returns {any[]}\n    */\n    get_relative_outputs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transactionbuilder_get_relative_outputs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * As the last operation of any transaction,\n    * add a static fee to the transaction.\n    * @param {FeeInputs} inputs\n    * @returns {TransactionBuilder}\n    */\n    add_fee(inputs) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(inputs, FeeInputs);\n        var ptr0 = inputs.ptr;\n        inputs.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee(ptr, ptr0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * As the last operation of BarToAbar transaction,\n    * add a static fee to the transaction.\n    * @param {FeeInputs} inputs\n    * @returns {TransactionBuilder}\n    */\n    add_fee_bar_to_abar(inputs) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(inputs, FeeInputs);\n        var ptr0 = inputs.ptr;\n        inputs.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee_bar_to_abar(ptr, ptr0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * A simple fee checker for mainnet v1.0.\n    *\n    * SEE [check_fee](ledger::data_model::Transaction::check_fee)\n    * @returns {boolean}\n    */\n    check_fee() {\n        var ret = wasm.transactionbuilder_check_fee(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * Create a new transaction builder.\n    * @param {BigInt} seq_id - Unique sequence ID to prevent replay attacks.\n    * @param {BigInt} seq_id\n    * @returns {TransactionBuilder}\n    */\n    static new(seq_id) {\n        uint64CvtShim[0] = seq_id;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_new(low0, high0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Deserialize transaction builder from string.\n    * @param {string} s\n    * @returns {TransactionBuilder}\n    */\n    static from_string(s) {\n        var ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_from_string(ptr0, len0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransactionBuilder to add an asset definition operation to a transaction builder instance.\n    * @example <caption> Error handling </caption>\n    * try {\n    *     await wasm.add_operation_create_asset(wasm.new_keypair(), \"test_memo\", wasm.random_asset_type(), wasm.AssetRules.default());\n    * } catch (err) {\n    *     console.log(err)\n    * }\n    *\n    * @param {XfrKeyPair} key_pair -  Issuer XfrKeyPair.\n    * @param {string} memo - Text field for asset definition.\n    * @param {string} token_code - Optional Base64 string representing the token code of the asset to be issued.\n    * If empty, a token code will be chosen at random.\n    * @param {AssetRules} asset_rules - Asset rules object specifying which simple policies apply\n    * to the asset.\n    * @param {XfrKeyPair} key_pair\n    * @param {string} memo\n    * @param {string} token_code\n    * @param {AssetRules} asset_rules\n    * @returns {TransactionBuilder}\n    */\n    add_operation_create_asset(key_pair, memo, token_code, asset_rules) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        _assertClass(asset_rules, AssetRules);\n        var ptr2 = asset_rules.ptr;\n        asset_rules.ptr = 0;\n        var ret = wasm.transactionbuilder_add_operation_create_asset(ptr, key_pair.ptr, ptr0, len0, ptr1, len1, ptr2);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @param {XfrKeyPair} key_pair\n    * @param {string} memo\n    * @param {string} token_code\n    * @param {string} _policy_choice\n    * @param {AssetRules} asset_rules\n    * @returns {TransactionBuilder}\n    */\n    add_operation_create_asset_with_policy(key_pair, memo, token_code, _policy_choice, asset_rules) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(_policy_choice, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        _assertClass(asset_rules, AssetRules);\n        var ptr3 = asset_rules.ptr;\n        asset_rules.ptr = 0;\n        var ret = wasm.transactionbuilder_add_operation_create_asset_with_policy(ptr, key_pair.ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransactionBuilder to add an asset issuance to a transaction builder instance.\n    *\n    * Use this function for simple one-shot issuances.\n    *\n    * @param {XfrKeyPair} key_pair  - Issuer XfrKeyPair.\n    * and types of traced assets.\n    * @param {string} code - base64 string representing the token code of the asset to be issued.\n    * @param {BigInt} seq_num - Issuance sequence number. Every subsequent issuance of a given asset type must have a higher sequence number than before.\n    * @param {BigInt} amount - Amount to be issued.\n    * @param {boolean} conf_amount - `true` means the asset amount is confidential, and `false` means it's nonconfidential.\n    * @param {XfrKeyPair} key_pair\n    * @param {string} code\n    * @param {BigInt} seq_num\n    * @param {BigInt} amount\n    * @param {boolean} conf_amount\n    * @returns {TransactionBuilder}\n    */\n    add_basic_issue_asset(key_pair, code, seq_num, amount, conf_amount) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = seq_num;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        uint64CvtShim[0] = amount;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_add_basic_issue_asset(ptr, key_pair.ptr, ptr0, len0, low1, high1, low2, high2, conf_amount);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that adds a hash to the ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Asset creator key pair.\n    * @param {String} code - base64 string representing token code of the asset whose memo will be updated.\n    * transaction validates.\n    * @param {String} new_memo - The new asset memo.\n    * @see {@link module:Findora-Wasm~AssetRules#set_updatable|AssetRules.set_updatable} for more information about how\n    * to define an updatable asset.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {string} code\n    * @param {string} new_memo\n    * @returns {TransactionBuilder}\n    */\n    add_operation_update_memo(auth_key_pair, code, new_memo) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(auth_key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(new_memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_operation_update_memo(ptr, auth_key_pair.ptr, ptr0, len0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that converts a bar to abar.\n    *\n    * @param {XfrKeyPair} auth_key_pair - input bar owner key pair\n    * @param {AXfrPubKey} abar_pubkey - abar receiver's public key\n    * @param {TxoSID} input_sid - txo sid of input bar\n    * @param {ClientAssetRecord} input_record -\n    * @param {string} seed\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {AXfrPubKey} abar_pubkey\n    * @param {BigInt} txo_sid\n    * @param {ClientAssetRecord} input_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @returns {TransactionBuilder}\n    */\n    add_operation_bar_to_abar(seed, auth_key_pair, abar_pubkey, txo_sid, input_record, owner_memo) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        _assertClass(abar_pubkey, AXfrPubKey);\n        uint64CvtShim[0] = txo_sid;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        _assertClass(input_record, ClientAssetRecord);\n        let ptr2 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr2 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        var ret = wasm.transactionbuilder_add_operation_bar_to_abar(ptr, ptr0, len0, auth_key_pair.ptr, abar_pubkey.ptr, low1, high1, input_record.ptr, ptr2);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to transaction builder which converts an abar to a bar.\n    *\n    * @param {AnonAssetRecord} input - the ABAR to be converted\n    * @param {AxfrOwnerMemo} axfr owner_memo - the corresponding owner_memo of the ABAR to be converted\n    * @param {MTLeafInfo} mt_leaf_info - the Merkle Proof of the ABAR\n    * @param {AXfrKeyPair} from_keypair - the owners Anon Key pair\n    * @param {XfrPublic} recipient - the BAR owner public key\n    * @param {bool} conf_amount - whether the BAR amount should be confidential\n    * @param {bool} conf_type - whether the BAR asset type should be confidential\n    * @param {AnonAssetRecord} input\n    * @param {AxfrOwnerMemo} owner_memo\n    * @param {MTLeafInfo} mt_leaf_info\n    * @param {AXfrKeyPair} from_keypair\n    * @param {XfrPublicKey} recipient\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransactionBuilder}\n    */\n    add_operation_abar_to_bar(input, owner_memo, mt_leaf_info, from_keypair, recipient, conf_amount, conf_type) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(input, AnonAssetRecord);\n        var ptr0 = input.ptr;\n        input.ptr = 0;\n        _assertClass(owner_memo, AxfrOwnerMemo);\n        var ptr1 = owner_memo.ptr;\n        owner_memo.ptr = 0;\n        _assertClass(mt_leaf_info, MTLeafInfo);\n        var ptr2 = mt_leaf_info.ptr;\n        mt_leaf_info.ptr = 0;\n        _assertClass(from_keypair, AXfrKeyPair);\n        _assertClass(recipient, XfrPublicKey);\n        var ret = wasm.transactionbuilder_add_operation_abar_to_bar(ptr, ptr0, ptr1, ptr2, from_keypair.ptr, recipient.ptr, conf_amount, conf_type);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Returns a list of commitment base64 strings as json\n    * @returns {any}\n    */\n    get_commitments() {\n        var ret = wasm.transactionbuilder_get_commitments(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Adds an operation to transaction builder which transfer a Anon Blind Asset Record\n    *\n    * @param {AnonAssetRecord} input - input abar\n    * @param {AxfrOwnerMemo} axfr owner_memo - input owner memo\n    * @param {AXfrKeyPair} from_keypair - abar sender's private key\n    * @param {AXfrPubKey} to_pub_key - receiver's Anon public key\n    * @param {u64} to_amount - amount to send to receiver\n    * @param {AnonAssetRecord} input\n    * @param {AxfrOwnerMemo} owner_memo\n    * @param {MTLeafInfo} mt_leaf_info\n    * @param {AXfrKeyPair} from_keypair\n    * @param {AXfrPubKey} to_pub_key\n    * @param {BigInt} to_amount\n    * @returns {TransactionBuilder}\n    */\n    add_operation_anon_transfer(input, owner_memo, mt_leaf_info, from_keypair, to_pub_key, to_amount) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(input, AnonAssetRecord);\n        var ptr0 = input.ptr;\n        input.ptr = 0;\n        _assertClass(owner_memo, AxfrOwnerMemo);\n        var ptr1 = owner_memo.ptr;\n        owner_memo.ptr = 0;\n        _assertClass(mt_leaf_info, MTLeafInfo);\n        var ptr2 = mt_leaf_info.ptr;\n        mt_leaf_info.ptr = 0;\n        _assertClass(from_keypair, AXfrKeyPair);\n        _assertClass(to_pub_key, AXfrPubKey);\n        uint64CvtShim[0] = to_amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_add_operation_anon_transfer(ptr, ptr0, ptr1, ptr2, from_keypair.ptr, to_pub_key.ptr, low3, high3);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} keypair\n    * @param {BigInt} amount\n    * @param {string} validator\n    * @returns {TransactionBuilder}\n    */\n    add_operation_delegate(keypair, amount, validator) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ptr1 = passStringToWasm0(validator, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_operation_delegate(ptr, keypair.ptr, low0, high0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} keypair\n    * @returns {TransactionBuilder}\n    */\n    add_operation_undelegate(keypair) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, XfrKeyPair);\n        var ret = wasm.transactionbuilder_add_operation_undelegate(ptr, keypair.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} keypair\n    * @param {BigInt} am\n    * @param {string} target_validator\n    * @returns {TransactionBuilder}\n    */\n    add_operation_undelegate_partially(keypair, am, target_validator) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, XfrKeyPair);\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ptr1 = passStringToWasm0(target_validator, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_operation_undelegate_partially(ptr, keypair.ptr, low0, high0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} keypair\n    * @returns {TransactionBuilder}\n    */\n    add_operation_claim(keypair) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, XfrKeyPair);\n        var ret = wasm.transactionbuilder_add_operation_claim(ptr, keypair.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} keypair\n    * @param {BigInt} am\n    * @returns {TransactionBuilder}\n    */\n    add_operation_claim_custom(keypair, am) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, XfrKeyPair);\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_add_operation_claim_custom(ptr, keypair.ptr, low0, high0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that support transfer utxo asset to ethereum address.\n    * @param {XfrKeyPair} keypair - Asset creator key pair.\n    * @param {String} ethereum_address - The address to receive Ethereum assets.\n    * @param {XfrKeyPair} keypair\n    * @param {string} ethereum_address\n    * @param {BigInt} amount\n    * @param {string | undefined} asset\n    * @param {string | undefined} lowlevel_data\n    * @returns {TransactionBuilder}\n    */\n    add_operation_convert_account(keypair, ethereum_address, amount, asset, lowlevel_data) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(keypair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(ethereum_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = amount;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = isLikeNone(asset) ? 0 : passStringToWasm0(asset, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(lowlevel_data) ? 0 : passStringToWasm0(lowlevel_data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_operation_convert_account(ptr, keypair.ptr, ptr0, len0, low1, high1, ptr2, len2, ptr3, len3);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds a serialized transfer asset operation to a transaction builder instance.\n    * @param {string} op - a JSON-serialized transfer operation.\n    * @see {@link module:Findora-Wasm~TransferOperationBuilder} for details on constructing a transfer operation.\n    * @throws Will throw an error if `op` fails to deserialize.\n    * @param {string} op\n    * @returns {TransactionBuilder}\n    */\n    add_transfer_operation(op) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(op, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_transfer_operation(ptr, ptr0, len0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Builds the anon operations from pre-notes\n    * @returns {TransactionBuilder}\n    */\n    build() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.transactionbuilder_build(ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    sign(kp) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transactionbuilder_sign(ptr, kp.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    sign_origin(kp) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transactionbuilder_sign_origin(ptr, kp.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Extracts the serialized form of a transaction.\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transactionbuilder_transaction(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Calculates transaction handle.\n    * @returns {string}\n    */\n    transaction_handle() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transactionbuilder_transaction_handle(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Fetches a client record from a transaction.\n    * @param {number} idx - Record to fetch. Records are added to the transaction builder sequentially.\n    * @param {number} idx\n    * @returns {ClientAssetRecord}\n    */\n    get_owner_record(idx) {\n        var ret = wasm.transactionbuilder_get_owner_record(this.ptr, idx);\n        return ClientAssetRecord.__wrap(ret);\n    }\n    /**\n    * Fetches an owner memo from a transaction\n    * @param {number} idx - Owner memo to fetch. Owner memos are added to the transaction builder sequentially.\n    * @param {number} idx\n    * @returns {OwnerMemo | undefined}\n    */\n    get_owner_memo(idx) {\n        var ret = wasm.transactionbuilder_get_owner_memo(this.ptr, idx);\n        return ret === 0 ? undefined : OwnerMemo.__wrap(ret);\n    }\n}\n/**\n* Structure that enables clients to construct complex transfers.\n*/\nexport class TransferOperationBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransferOperationBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transferoperationbuilder_free(ptr);\n    }\n    /**\n    * Create a new transfer operation builder.\n    * @returns {TransferOperationBuilder}\n    */\n    static new() {\n        var ret = wasm.transferoperationbuilder_new();\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an input to a transfer operation builder.\n    * @param {TxoRef} txo_ref - Absolute or relative utxo reference\n    * @param {string} asset_record - Serialized client asset record to serve as transfer input. This record must exist on the\n    * ledger for the transfer to be valid.\n    * @param {OwnerMemo} owner_memo - Opening parameters.\n    * @param tracing_key {AssetTracerKeyPair} - Tracing key, must be added to traceable\n    * assets.\n    * @param {XfrKeyPair} key - Key pair associated with the input.\n    * @param {BigInt} amount - Amount of input record to transfer.\n    * @see {@link module:Findora-Wasm~TxoRef#create_absolute_txo_ref|TxoRef.create_absolute_txo_ref}\n    * or {@link module:Findora-Wasm~TxoRef#create_relative_txo_ref|TxoRef.create_relative_txo_ref} for details on txo\n    * references.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for details on fetching blind asset records.\n    * @throws Will throw an error if `oar` or `txo_ref` fail to deserialize.\n    * @param {TxoRef} txo_ref\n    * @param {ClientAssetRecord} asset_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @param {TracingPolicies} tracing_policies\n    * @param {XfrKeyPair} key\n    * @param {BigInt} amount\n    * @returns {TransferOperationBuilder}\n    */\n    add_input_with_tracing(txo_ref, asset_record, owner_memo, tracing_policies, key, amount) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(txo_ref, TxoRef);\n        var ptr0 = txo_ref.ptr;\n        txo_ref.ptr = 0;\n        _assertClass(asset_record, ClientAssetRecord);\n        var ptr1 = asset_record.ptr;\n        asset_record.ptr = 0;\n        let ptr2 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr2 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        _assertClass(tracing_policies, TracingPolicies);\n        _assertClass(key, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        var ret = wasm.transferoperationbuilder_add_input_with_tracing(ptr, ptr0, ptr1, ptr2, tracing_policies.ptr, key.ptr, low3, high3);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an input to a transfer operation builder.\n    * @param {TxoRef} txo_ref - Absolute or relative utxo reference\n    * @param {string} asset_record - Serialized client asset record to serve as transfer input. This record must exist on the\n    * ledger for the transfer to be valid\n    * @param {OwnerMemo} owner_memo - Opening parameters.\n    * @param {XfrKeyPair} key - Key pair associated with the input.\n    * @param {BigInt} amount - Amount of input record to transfer\n    * or {@link module:Findora-Wasm~TxoRef#create_relative_txo_ref|TxoRef.create_relative_txo_ref} for details on txo\n    * references.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for details on fetching blind asset records.\n    * @throws Will throw an error if `oar` or `txo_ref` fail to deserialize.\n    * @param {TxoRef} txo_ref\n    * @param {ClientAssetRecord} asset_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @param {XfrKeyPair} key\n    * @param {BigInt} amount\n    * @returns {TransferOperationBuilder}\n    */\n    add_input_no_tracing(txo_ref, asset_record, owner_memo, key, amount) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(txo_ref, TxoRef);\n        var ptr0 = txo_ref.ptr;\n        txo_ref.ptr = 0;\n        _assertClass(asset_record, ClientAssetRecord);\n        let ptr1 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr1 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        _assertClass(key, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        var ret = wasm.transferoperationbuilder_add_input_no_tracing(ptr, ptr0, asset_record.ptr, ptr1, key.ptr, low2, high2);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an output to a transfer operation builder.\n    *\n    * @param {BigInt} amount - amount to transfer to the recipient.\n    * @param {XfrPublicKey} recipient - public key of the recipient.\n    * @param tracing_key {AssetTracerKeyPair} - Optional tracing key, must be added to traced\n    * assets.\n    * @param code {string} - String representation of the asset token code.\n    * @param conf_amount {boolean} - `true` means the output's asset amount is confidential, and `false` means it's nonconfidential.\n    * @param conf_type {boolean} - `true` means the output's asset type is confidential, and `false` means it's nonconfidential.\n    * @throws Will throw an error if `code` fails to deserialize.\n    * @param {BigInt} amount\n    * @param {XfrPublicKey} recipient\n    * @param {TracingPolicies} tracing_policies\n    * @param {string} code\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransferOperationBuilder}\n    */\n    add_output_with_tracing(amount, recipient, tracing_policies, code, conf_amount, conf_type) {\n        const ptr = this.__destroy_into_raw();\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(recipient, XfrPublicKey);\n        _assertClass(tracing_policies, TracingPolicies);\n        var ptr1 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_add_output_with_tracing(ptr, low0, high0, recipient.ptr, tracing_policies.ptr, ptr1, len1, conf_amount, conf_type);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an output to a transfer operation builder.\n    *\n    * @param {BigInt} amount - amount to transfer to the recipient\n    * @param {XfrPublicKey} recipient - public key of the recipient\n    * @param code {string} - String representaiton of the asset token code\n    * @param conf_amount {boolean} - `true` means the output's asset amount is confidential, and `false` means it's nonconfidential.\n    * @param conf_type {boolean} - `true` means the output's asset type is confidential, and `false` means it's nonconfidential.\n    * @throws Will throw an error if `code` fails to deserialize.\n    * @param {BigInt} amount\n    * @param {XfrPublicKey} recipient\n    * @param {string} code\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransferOperationBuilder}\n    */\n    add_output_no_tracing(amount, recipient, code, conf_amount, conf_type) {\n        const ptr = this.__destroy_into_raw();\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(recipient, XfrPublicKey);\n        var ptr1 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_add_output_no_tracing(ptr, low0, high0, recipient.ptr, ptr1, len1, conf_amount, conf_type);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to ensure the transfer inputs and outputs are balanced.\n    * This function will add change outputs for all unspent portions of input records.\n    * @throws Will throw an error if the transaction cannot be balanced.\n    * @returns {TransferOperationBuilder}\n    */\n    balance() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.transferoperationbuilder_balance(ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to finalize the transaction.\n    *\n    * @throws Will throw an error if input and output amounts do not add up.\n    * @throws Will throw an error if not all record owners have signed the transaction.\n    * @returns {TransferOperationBuilder}\n    */\n    create() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.transferoperationbuilder_create(ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add a signature to the operation.\n    *\n    * All input owners must sign.\n    *\n    * @param {XfrKeyPair} kp - key pair of one of the input owners.\n    * @param {XfrKeyPair} kp\n    * @returns {TransferOperationBuilder}\n    */\n    sign(kp) {\n        const ptr = this.__destroy_into_raw();\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transferoperationbuilder_sign(ptr, kp.ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    builder() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transferoperationbuilder_builder(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {string} s\n    * @returns {TransferOperationBuilder}\n    */\n    static from_string(s) {\n        var ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_from_string(ptr0, len0);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to extract an operation expression as JSON.\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transferoperationbuilder_transaction(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n* Indicates whether the TXO ref is an absolute or relative value.\n*/\nexport class TxoRef {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TxoRef.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_txoref_free(ptr);\n    }\n    /**\n    * Creates a relative txo reference as a JSON string. Relative txo references are offset\n    * backwards from the operation they appear in -- 0 is the most recent, (n-1) is the first output\n    * of the transaction.\n    *\n    * Use relative txo indexing when referring to outputs of intermediate operations (e.g. a\n    * transaction containing both an issuance and a transfer).\n    *\n    * # Arguments\n    * @param {BigInt} idx -  Relative TXO (transaction output) SID.\n    * @param {BigInt} idx\n    * @returns {TxoRef}\n    */\n    static relative(idx) {\n        uint64CvtShim[0] = idx;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.txoref_relative(low0, high0);\n        return TxoRef.__wrap(ret);\n    }\n    /**\n    * Creates an absolute transaction reference as a JSON string.\n    *\n    * Use absolute txo indexing when referring to an output that has been assigned a utxo index (i.e.\n    * when the utxo has been committed to the ledger in an earlier transaction).\n    *\n    * # Arguments\n    * @param {BigInt} idx -  Txo (transaction output) SID.\n    * @param {BigInt} idx\n    * @returns {TxoRef}\n    */\n    static absolute(idx) {\n        uint64CvtShim[0] = idx;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.txoref_absolute(low0, high0);\n        return TxoRef.__wrap(ret);\n    }\n}\n/**\n* The public key for the hybrid encryption scheme.\n*/\nexport class XPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xpublickey_free(ptr);\n    }\n}\n/**\n* The secret key for the hybrid encryption scheme.\n*/\nexport class XSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xsecretkey_free(ptr);\n    }\n}\n/**\n* The keypair for confidential transfer.\n*/\nexport class XfrKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XfrKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xfrkeypair_free(ptr);\n    }\n    /**\n    * The public key.\n    * @returns {XfrPublicKey}\n    */\n    get pub_key() {\n        var ret = wasm.__wbg_get_xfrkeypair_pub_key(this.ptr);\n        return XfrPublicKey.__wrap(ret);\n    }\n    /**\n    * The public key.\n    * @param {XfrPublicKey} arg0\n    */\n    set pub_key(arg0) {\n        _assertClass(arg0, XfrPublicKey);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_xfrkeypair_pub_key(this.ptr, ptr0);\n    }\n}\n/**\n* The public key wrapper for confidential transfer, for WASM compatability.\n*/\nexport class XfrPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XfrPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xfrpublickey_free(ptr);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('wasm_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        var ret = JSON.stringify(obj === undefined ? null : obj);\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        var ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_now_4abbca4ef2aba8d6 = function(arg0) {\n        var ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_randomFillSync_f20541303a990429 = handleError(function(arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    });\n    imports.wbg.__wbg_getRandomValues_f308e7233e5601b7 = handleError(function(arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    });\n    imports.wbg.__wbg_crypto_8fd02d72c4ba6c5c = function(arg0) {\n        var ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        var ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_process_bd02d71a65cf734c = function(arg0) {\n        var ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_1d70d407cb23129d = function(arg0) {\n        var ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_0091cdf1ffa73e4d = function(arg0) {\n        var ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_msCrypto_7e1e6014bddd75de = function(arg0) {\n        var ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_b06abd91965488c8 = handleError(function() {\n        var ret = module.require;\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        var ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_get_0c6963cbab34fbb6 = handleError(function(arg0, arg1) {\n        var ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbg_call_cb478d88f3068c91 = handleError(function(arg0, arg1) {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbg_self_05c54dcacb623b9a = handleError(function() {\n        var ret = self.self;\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbg_window_9777ce446d12989f = handleError(function() {\n        var ret = window.window;\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbg_globalThis_f0ca0bbb0149cf3d = handleError(function() {\n        var ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbg_global_c3c8325ae8c7f1a9 = handleError(function() {\n        var ret = global.global;\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        var ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_3efc7bfa69a681f9 = function(arg0, arg1) {\n        var ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_f5e0576f61ee7461 = handleError(function(arg0, arg1, arg2) {\n        var ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    });\n    imports.wbg.__wbg_buffer_ebc6c8e75510eae3 = function(arg0) {\n        var ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_317f0dd77f7a6673 = function(arg0) {\n        var ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_135e963dedf67b22 = function(arg0) {\n        var ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_4a5072a31008e0cb = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_newwithlength_78dc302d31527318 = function(arg0) {\n        var ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_34c228a45c72d146 = function(arg0, arg1, arg2) {\n        var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        var ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        var ret = debugString(getObject(arg1));\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n","import { AbarMemo, Account } from './types';\nimport * as ledger from 'findora-wallet-wasm/web-lightweight';\nimport('findora-wallet-wasm/web-lightweight/wasm_bg.wasm');\n\nexport const getLedger = async () => {\n  try {\n    return ledger;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport const initLedger = async () => {\n  try {\n    console.log(new URL('findora-wallet-wasm/web-lightweight/wasm_bg.wasm', import.meta.url));\n    const ledger: any = await getLedger();\n    if (typeof ledger?.default === 'function') {\n      await ledger?.default();\n    }\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\n\nexport const decryptAbarMemo = async (abarMemo: AbarMemo, axfrSecretKey: Account['axfrSecretKey']): Promise<boolean> => {\n  const ledger = await getLedger();\n  const [_, myMemoData] = abarMemo;\n  const aXfrSecretKeyConverted = (ledger as any).axfr_keypair_from_string(axfrSecretKey);\n  const abarOwnerMemo = (ledger as any).AxfrOwnerMemo.from_json(myMemoData);\n  // let decryptedAbar: Uint8Array;\n  try {\n    (ledger as any).try_decrypt_axfr_memo(abarOwnerMemo, aXfrSecretKeyConverted);\n  } catch (error) {\n    return false;\n  }\n  return true;\n}\n","export type EnvConfig = {\n  dbName?: string;\n  envName?: string;\n  envBaseURL?: string;\n  envQueryPort?: string;\n  stores?: {\n    accounts?: StoreMeta;\n    abarMemos?: StoreMeta;\n    commitments?: StoreMeta;\n  }\n}\n\nexport type StoreMeta = {\n  store: string;\n  storeConfig: any;\n}\n\nconst STORE_ABAR_MEMOS = 'abar_memos' as const;\nconst STORE_ACCOUNTS = 'accounts' as const;\nconst STORE_COMMITMENTS = 'commitments' as const;\n\nexport const DEFAULT_ENV_CONFIG: EnvConfig = {\n  dbName: 'commitment_sync',\n  envName: 'qa02',\n  envBaseURL: 'https://dev-qa02.dev.findora.org',\n  envQueryPort: '8667',\n  stores: {\n    accounts: {\n      store: STORE_ACCOUNTS,\n      storeConfig: { keyPath: 'axfrPublicKey' },\n    },\n    abarMemos: {\n      store: STORE_ABAR_MEMOS,\n      storeConfig: { keyPath: 'sid' },\n    },\n    commitments: {\n      store: STORE_COMMITMENTS,\n      storeConfig: { keyPath: 'sid' },\n    }\n  },\n};\n","import { initLedger } from './triple-masking';\nimport { DEFAULT_ENV_CONFIG, EnvConfig } from './config';\nimport { AbarMemoSchema, AccountSchema, CommitmentSchema } from './types';\n\ninterface ICommitmentDB {\n  dbFullName: string;\n  initialized: boolean;\n  queryURL: string;\n}\n\nclass CommitmentDB implements ICommitmentDB {\n  private db = {} as IDBDatabase;\n  static envConfig = DEFAULT_ENV_CONFIG;\n  static setEnvConfig (newEnvConfig: EnvConfig) {\n    this.envConfig = newEnvConfig;\n  }\n  dbFullName = '';\n  initialized = false;\n  queryURL = '';\n\n  constructor () {\n    initLedger();\n  }\n\n  init () {\n    const {\n      dbName,\n      envName,\n      envBaseURL,\n      envQueryPort,\n      stores = {},\n    } = CommitmentDB.envConfig;\n\n    this.dbFullName = `${dbName}_${envName}`;\n    this.queryURL = [envBaseURL, envQueryPort && `:${envQueryPort}`].filter(Boolean).join('');\n\n    this.initialized = false;\n    if (window.indexedDB) {\n      const request = window.indexedDB.open(this.dbFullName);\n      request.onsuccess = (event) => {\n        const { result } = event.target as IDBOpenDBRequest;\n        this.setDB(result);\n      }\n      request.onupgradeneeded = (event) => {\n        const { result } = event.target as IDBOpenDBRequest;\n        const storesObject = Object.values(stores);\n        for (const objectStore of storesObject) {\n          result.createObjectStore(objectStore.store, objectStore.storeConfig);\n        }\n        this.setDB(result);\n      }\n    }\n  }\n\n  private setDB (db: IDBDatabase) {\n    this.db = db;\n    this.initialized = true;\n    // this.db.onversionchange = () => {\n    //   db.close();\n    //   console.log(\"A new version of this page is ready. Please reload or close this tab!\");\n    // };\n  }\n\n  addAccount (account: AccountSchema) {\n    if (!this.initialized) throw new Error('DB hasn\\'t been initialized.');\n    return new Promise((resolve, reject) => {\n      const { store: storeName = '' } = CommitmentDB.envConfig.stores?.accounts ?? {};\n      const tx = this.db.transaction(storeName, 'readwrite');\n      const store = tx.objectStore(storeName);\n      tx.oncomplete = () => {\n        resolve(true);\n      }\n      tx.onerror = reject;\n      tx.onabort = reject;\n      store.put(account);\n    })\n  }\n\n  addAbarMemos (abarMemos: AbarMemoSchema[]) {\n    if (!this.initialized) throw new Error('DB hasn\\'t been initialized.');\n    return new Promise((resolve, reject) => {\n      const { store: storeName = '' } = CommitmentDB.envConfig.stores?.abarMemos ?? {};\n      const tx = this.db.transaction(storeName, 'readwrite');\n      const store = tx.objectStore(storeName);\n      tx.oncomplete = () => {\n        console.log('addAbarMemos: saved!');\n        resolve(true);\n      }\n      tx.onerror = reject;\n      tx.onabort = reject;\n      for (const abarMemo of abarMemos) {\n        store.put(abarMemo);\n      }\n    })\n  }\n\n  getAccounts (): Promise<AccountSchema[]> {\n    if (!this.initialized) throw new Error('DB hasn\\'t been initialized.');\n    return new Promise((resolve, reject) => {\n      const { store: storeName = '' } = CommitmentDB.envConfig.stores?.accounts ?? {};\n      const tx = this.db.transaction(storeName, 'readwrite');\n      const store = tx.objectStore(storeName);\n      const storeRequest = store.getAll();\n      storeRequest.onsuccess = () => {\n        resolve(storeRequest.result);\n      }\n      storeRequest.onerror = reject;\n    })\n  }\n\n  addCommitments (commitments: CommitmentSchema[]) {\n    if (!this.initialized) throw new Error('DB hasn\\'t been initialized.');\n    return new Promise((resolve, reject) => {\n      const { store: storeName = '' } = CommitmentDB.envConfig.stores?.commitments ?? {};\n      const tx = this.db.transaction(storeName, 'readwrite');\n      const store = tx.objectStore(storeName);\n      tx.oncomplete = () => {\n        console.log('commitment: saved!');\n        resolve(true);\n      }\n      tx.onerror = reject;\n      tx.onabort = reject;\n      for (const commitmentItem of commitments) {\n        store.put({ ...commitmentItem });\n      }\n    })\n  }\n\n  getCurrentMas (): Promise<IDBValidKey> {\n    if (!this.initialized) throw new Error('DB hasn\\'t been initialized.');\n    return new Promise((resolve, reject) => {\n      const { store: storeName = '' } = CommitmentDB.envConfig.stores?.abarMemos ?? {};\n      const tx = this.db.transaction(storeName, 'readwrite');\n      const store = tx.objectStore(storeName);\n      const openCursorRequest = store.openKeyCursor(null, 'prev')\n      openCursorRequest.onsuccess = () => {\n        const cursor = openCursorRequest.result;\n        const maxKey = cursor && cursor.key;\n        resolve(maxKey || -1);\n      }\n      openCursorRequest.onerror = (event) => {\n        console.log(event);\n        reject('error');\n      }\n    })\n  }\n\n  getAbarMemos (start = 0, end?: number): Promise<AbarMemoSchema[]> {\n    if (!this.initialized) throw new Error('DB hasn\\'t been initialized.');\n    const idbKeyRange = end ? IDBKeyRange.bound(start, end) : IDBKeyRange.lowerBound(start);\n    return new Promise((resolve, reject) => {\n      const { store: storeName = '' } = CommitmentDB.envConfig.stores?.abarMemos ?? {};\n      const store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n      const openCursorRequest = store.openCursor(idbKeyRange);\n      const abarMemos: AbarMemoSchema[] = [];\n      openCursorRequest.onsuccess = () => {\n        const cursor = openCursorRequest.result;\n        if (cursor) {\n          abarMemos.push(cursor.value);\n          cursor.continue();\n        } else {\n          resolve(abarMemos);\n        }\n      }\n      openCursorRequest.onerror = (event) => {\n        console.log(event);\n        reject('error');\n      }\n    })\n  }\n}\n\nexport const db = new CommitmentDB();\n","import { db } from './db';\nimport { Account } from './types';\n\nexport const add = (account: Account) => {\n  return db.addAccount({ ...account, lastSid: 0 });\n}\n\n// export const get = () => {\n\n// }\n\n// export const remove = () => {\n\n// }\n","import { db } from './db';\nimport { AbarMemo } from './types';\n\nexport const getMAS = (): Promise<number> => {\n  return new Promise((resolve => {\n    fetch(db.queryURL + '/get_max_atxo_sid')\n      .then(response => response.json())\n      .then(resolve)\n  }))\n}\n\nexport const getAbarMemos = (from: number): Promise<{ next: number, memos: AbarMemo[] }> => {\n  const to = Math.max(0, from - 100);\n  return new Promise((resolve => {\n    fetch(db.queryURL + `/get_abar_memos?start=${to}&end=${from}`)\n      .then(response => response.json())\n      .then(memos => {\n        resolve({ next: to > 0 ? to - 1 : -1, memos });\n      })\n  }))\n}\n\nexport const getCommitment = (sid: number): Promise<string> => {\n  return new Promise((resolve => {\n    fetch(db.queryURL + `/get_abar_commitment/${sid}`)\n      .then(response => response.json())\n      .then(commitment => {\n        resolve(commitment);\n      })\n  }))\n}\n","import { db } from './db';\nimport * as Apis from './apis';\n\nexport const fetchLatestMemos = async () => {\n  try {\n    let mas = await Apis.getMAS();\n    const currentMas = await db.getCurrentMas();\n    if (currentMas >= mas) return;\n    while (mas > currentMas) {\n      const { next, memos } = await Apis.getAbarMemos(mas);\n      db.addAbarMemos(memos.map(memo => ({ sid: memo[0], memo })));\n      mas = next;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const get = (filter?: { from: number, end?: number }) => {\n  const { from = 0, end } = filter || {};\n  return db.getAbarMemos(from, end);\n}\n","import { db } from \"./db\";\nimport { decryptAbarMemo } from \"./triple-masking\";\nimport { AbarMemo, AbarMemoSchema, Account } from \"./types\";\nimport { fetchLatestMemos } from \"./abarMemo\";\nimport { getMAS } from \"./apis\";\nimport SyncWorker from 'web-worker:./web-worker/sync';\n\nexport const syncAll = async () => {\n  await fetchLatestMemos();\n  const accounts = await db.getAccounts();\n  let currentMAS = await getMAS();\n  let memos: AbarMemoSchema[] = [];\n  while (currentMAS >= 0) {\n    const fromIdx = Math.max(0, currentMAS - 99);\n    const abarsMemos = await db.getAbarMemos(fromIdx, currentMAS);\n    memos = memos.concat(abarsMemos);\n    currentMAS = fromIdx - 1;\n  }\n  for (const account of accounts) {\n    const syncWorker = new SyncWorker();\n    syncWorker.postMessage({ account, memos });\n  }\n  // const abarMemos = await db.\n  // for (const abarMemoItem of abarMemos) {\n  //   const { sid, memo } = abarMemoItem;\n  //   const isDecrypted = await decryptAbarMemo(memo, zkAccount);\n  //   console.log(sid);\n  //   console.log('isDecrypted:', isDecrypted);\n  //   if (isDecrypted) {\n  //     const commitment = await Apis.getCommitment(sid);\n  //     this.addCommitment(commitment, sid, zkAccount.axfrPublicKey)\n  //   }\n  // }\n}","import { db } from './db';\nimport * as account from './account';\nimport * as abarMemo from './abarMemo';\nimport * as commitment from './commitment';\n\ndeclare global {\n  interface Window {\n    db: any;\n    abarMemo: any;\n    account: any;\n    commitment: any;\n  }\n}\n\nwindow.db = db;\nwindow.account = account;\nwindow.abarMemo = abarMemo;\nwindow.commitment = commitment;\n"],"names":["Apis.getMAS","Apis.getAbarMemos","SyncWorker"],"mappings":"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"}